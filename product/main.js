/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./source/basic/base64.ts":
/*!********************************!*\
  !*** ./source/basic/base64.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.uint8_to_b64 = exports.b64_to_uint8 = void 0;\r\nconst to_base64 = [\r\n    ...String.fromCharCode(...new Array(26).fill(0).map((_, i) => 0x41 + i)),\r\n    ...String.fromCharCode(...new Array(26).fill(0).map((_, i) => 0x61 + i)),\r\n    ...String.fromCharCode(...new Array(10).fill(0).map((_, i) => 0x30 + i)),\r\n    '+', '/'\r\n];\r\nconst from_base64 = new Map(to_base64.map((c, i) => [c, i]));\r\nfrom_base64.set('=', 0);\r\nconst base64_regex = /^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/;\r\nconst uint8_to_b64 = (buffer) => {\r\n    var _a, _b;\r\n    const num_quanta = Math.ceil(buffer.length / 3);\r\n    const result = new Array(4 * num_quanta);\r\n    for (let p = 0; p < num_quanta; p++) {\r\n        const quantum = buffer.subarray(3 * p, 3 * (p + 1));\r\n        const a0 = quantum[0];\r\n        const a1 = (_a = quantum[1]) !== null && _a !== void 0 ? _a : 0;\r\n        const a2 = (_b = quantum[2]) !== null && _b !== void 0 ? _b : 0;\r\n        result[4 * p] = to_base64[a0 >> 2];\r\n        result[4 * p + 1] = to_base64[((a0 & 0x03) << 4) | (a1 >> 4)];\r\n        result[4 * p + 2] = to_base64[((a1 & 0x0F) << 2) | (a2 >> 6)];\r\n        result[4 * p + 3] = to_base64[a2 & 0x3F];\r\n    }\r\n    if (buffer.length % 3 == 1) {\r\n        result[result.length - 1] = '=';\r\n        result[result.length - 2] = '=';\r\n    }\r\n    if (buffer.length % 3 == 2) {\r\n        result[result.length - 1] = '=';\r\n    }\r\n    return result.join('');\r\n};\r\nexports.uint8_to_b64 = uint8_to_b64;\r\nconst b64_to_uint8 = (input) => {\r\n    var _a;\r\n    if (!input.match(base64_regex)) {\r\n        throw TypeError('The input does not match the base64 format.');\r\n    }\r\n    const num_quanta = Math.trunc(input.length / 4);\r\n    const pads = ((_a = input.match(/={1,2}$/)) !== null && _a !== void 0 ? _a : [])[0].length;\r\n    const buffer = new Uint8Array(3 * num_quanta - pads);\r\n    for (let p = 0; p < num_quanta; p++) {\r\n        const quanta_chars = [...input.substring(p * 4, (p + 1) * 4)];\r\n        const [b0, b1, b2, b3] = quanta_chars.map(c => { var _a; return (_a = from_base64.get(c)) !== null && _a !== void 0 ? _a : 0; });\r\n        buffer[3 * p] = (b0 << 2) | (b1 >> 4);\r\n        buffer[3 * p + 1] = ((b1 & 0x0F) << 4) | (b2 >> 2);\r\n        buffer[3 * p + 2] = ((b2 & 0x03) << 6) | b3;\r\n    }\r\n    return buffer;\r\n};\r\nexports.b64_to_uint8 = b64_to_uint8;\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/basic/base64.ts?");

/***/ }),

/***/ "./source/basic/io.ts":
/*!****************************!*\
  !*** ./source/basic/io.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SOGameIO = void 0;\r\nconst base64_1 = __webpack_require__(/*! ./base64 */ \"./source/basic/base64.ts\");\r\nclass SOGameIO {\r\n    static import(dims, input, format = 'base64') {\r\n        if (dims.D1 > SOGameIO.exportSymbols.length) {\r\n            throw RangeError(`The dimensional parameter 'D1' is too large.`);\r\n        }\r\n        if (input.length == dims.D2) {\r\n            format = 'simple';\r\n        }\r\n        else if (input.substring(0, 5) == 'data:') {\r\n            format = 'base64';\r\n        }\r\n        if (format == 'simple') {\r\n            const v_list = [];\r\n            for (const [e_rc_id, c] of Array.from(input).entries()) {\r\n                const v_id0 = e_rc_id * dims.D1;\r\n                if (this.importSymbols.has(c)) {\r\n                    v_list.push(v_id0 + this.importSymbols.get(c));\r\n                }\r\n                else {\r\n                    for (const key of new Array(dims.D1).keys()) {\r\n                        v_list.push(v_id0 + key);\r\n                    }\r\n                }\r\n            }\r\n            return new Set(v_list);\r\n        }\r\n        else if (format == 'base64') {\r\n            const compressed = (0, base64_1.b64_to_uint8)(input.substring(5));\r\n            const v_list = [];\r\n            for (const [pos, val] of compressed.entries()) {\r\n                let v_id = pos * 8;\r\n                for (let i = 0; i < 8; i++) {\r\n                    if (v_id >= dims.D3) {\r\n                        break;\r\n                    }\r\n                    if ((val & (1 << i)) > 0) {\r\n                        v_list.push(v_id);\r\n                    }\r\n                    v_id++;\r\n                }\r\n            }\r\n            return new Set(v_list);\r\n        }\r\n        else {\r\n            const __type_exhausted = format;\r\n            throw TypeError(`'${format}' is not a valid format.`);\r\n        }\r\n    }\r\n    static export(dims, v_set, format = 'base64') {\r\n        if (dims.D1 > SOGameIO.exportSymbols.length) {\r\n            throw RangeError(`The dimensional parameter 'D1' is too large.`);\r\n        }\r\n        if (format == 'simple') {\r\n            const result = new Array(dims.D2).fill('!');\r\n            for (const v_id of v_set) {\r\n                const e_rc_id = Math.trunc(v_id / dims.D1);\r\n                const key = v_id % dims.D1;\r\n                if (result[e_rc_id] == '!') {\r\n                    result[e_rc_id] = this.exportSymbols[key];\r\n                }\r\n                else {\r\n                    result[e_rc_id] = '.';\r\n                }\r\n            }\r\n            return result.join('');\r\n        }\r\n        else if (format == 'base64') {\r\n            const compressed = new Uint8Array(Math.ceil(dims.D3 / 8));\r\n            for (const pos of compressed.keys()) {\r\n                let c = 0;\r\n                for (let i = 0; i < 8; i++) {\r\n                    if (v_set.has(pos * 8 + i)) {\r\n                        c |= 1 << i;\r\n                    }\r\n                }\r\n                compressed[pos] = c;\r\n            }\r\n            return `data:${(0, base64_1.uint8_to_b64)(compressed)}`;\r\n        }\r\n        else {\r\n            const __type_exhausted = format;\r\n            throw TypeError(`'${format}' is not a valid format.`);\r\n        }\r\n    }\r\n}\r\nexports.SOGameIO = SOGameIO;\r\n_a = SOGameIO;\r\nSOGameIO.exportSymbols = [\r\n    '1', '2', '3', '4', '5', '6', '7', '8', '9',\r\n    ...String.fromCharCode(...new Array(26).fill(0).map((_, i) => 0x41 + i)),\r\n    ...String.fromCharCode(...new Array(26).fill(0).map((_, i) => 0x61 + i)),\r\n    '<', '>'\r\n];\r\nSOGameIO.importSymbols = new Map(_a.exportSymbols.map((c, i) => [c, i]));\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/basic/io.ts?");

/***/ }),

/***/ "./source/basic/tools.ts":
/*!*******************************!*\
  !*** ./source/basic/tools.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.mergiter = exports.multirange = exports.range = exports.Range = exports.BaseN = void 0;\r\nclass BaseN {\r\n    constructor(base) {\r\n        this.base = base;\r\n    }\r\n    static fromD(digits, base) {\r\n        return digits.reduce((p, a) => (p * base + a), 0);\r\n    }\r\n    fromDigits(digits) {\r\n        return BaseN.fromD(digits, this.base);\r\n    }\r\n    static toD(num, length, base) {\r\n        const arr = Array.from({ length: length });\r\n        for (let i = length - 1; i > 0; i--) {\r\n            arr[i] = num % base;\r\n            num = Math.trunc(num / base);\r\n        }\r\n        arr[0] = num;\r\n        return arr;\r\n    }\r\n    toDigits(num, length) {\r\n        return BaseN.toD(num, length, this.base);\r\n    }\r\n}\r\nexports.BaseN = BaseN;\r\nclass Range {\r\n    constructor(a, b) {\r\n        if (typeof b == 'undefined') {\r\n            if (!Number.isInteger(a)) {\r\n                throw TypeError(`The inputs must be integer.`);\r\n            }\r\n            this.a = 0;\r\n            this.b = a;\r\n        }\r\n        else {\r\n            if (!Number.isInteger(a) || !Number.isInteger(b)) {\r\n                throw TypeError(`The inputs must be integer.`);\r\n            }\r\n            this.a = a;\r\n            this.b = b;\r\n        }\r\n    }\r\n    at(i) {\r\n        return (this.a + i);\r\n    }\r\n    get length() {\r\n        return (this.b - this.a);\r\n    }\r\n    set length(len) {\r\n        this.b = this.a + len;\r\n    }\r\n    *keys() {\r\n        const len = (this.b - this.a);\r\n        for (let i = 0; i < len; i++) {\r\n            yield i;\r\n        }\r\n    }\r\n    *values() {\r\n        for (let i = this.a; i < this.b; i++) {\r\n            yield i;\r\n        }\r\n    }\r\n    *[Symbol.iterator]() {\r\n        for (let i = this.a; i < this.b; i++) {\r\n            yield i;\r\n        }\r\n    }\r\n    *entries() {\r\n        const len = (this.b - this.a);\r\n        for (let i = 0; i < len; i++) {\r\n            yield [i, this.a + i];\r\n        }\r\n    }\r\n    map(f) {\r\n        const len = (this.b - this.a);\r\n        const arr = new Array(len);\r\n        for (let i = 0; i < len; i++) {\r\n            arr[i] = f(this.a + i, i);\r\n        }\r\n        return arr;\r\n    }\r\n    forEach(f) {\r\n        const len = (this.b - this.a);\r\n        const arr = new Array(len);\r\n        for (let i = 0; i < len; i++) {\r\n            f(this.a + i, i);\r\n        }\r\n    }\r\n}\r\nexports.Range = Range;\r\nconst range = (a, b) => new Range(a, b);\r\nexports.range = range;\r\nfunction* MultirangeIterator(dims, prev_res = []) {\r\n    if (dims.length == 0) {\r\n        return [];\r\n    }\r\n    const i0 = (typeof dims[0] == 'number') ? 0 : dims[0][0];\r\n    const i1 = (typeof dims[0] == 'number') ? dims[0] : dims[0][1];\r\n    if (dims.length == 1) {\r\n        for (let i = i0; i < i1; i++) {\r\n            yield [...prev_res, i];\r\n        }\r\n    }\r\n    else {\r\n        for (let i = i0; i < i1; i++) {\r\n            yield* MultirangeIterator(dims.slice(1), [...prev_res, i]);\r\n        }\r\n    }\r\n}\r\nconst multirange = (...dims) => MultirangeIterator(dims);\r\nexports.multirange = multirange;\r\nfunction* MergedIterator(iters, prev_res = []) {\r\n    if (iters.length == 0) {\r\n        yield [];\r\n        return;\r\n    }\r\n    else if (iters.length == 1) {\r\n        for (const e of iters[0]) {\r\n            yield [...prev_res, e];\r\n        }\r\n    }\r\n    else {\r\n        for (const e of iters[0]) {\r\n            yield* (0, exports.mergiter)(iters.slice(1), [...prev_res, e]);\r\n        }\r\n    }\r\n}\r\nconst mergiter = (...iters) => MergedIterator(iters);\r\nexports.mergiter = mergiter;\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/basic/tools.ts?");

/***/ }),

/***/ "./source/database.ts":
/*!****************************!*\
  !*** ./source/database.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.database = void 0;\r\nexports.database = [\r\n    {\r\n        format: 'simple',\r\n        data: '956700000400800000300910700021000000000000300790000120000029003000008004000007650',\r\n        desc: 'Diabolic grade from SudokuWiki. (6 NS2 / F2 / X-cycle / 2 XY-chain)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '300750001000300020000009407020001005700000006500900070905100000070003000100068002',\r\n        desc: 'Devious grade from Sudoku+. (NS2 / 2 NS3 / 2 F2 / XY-chain / AIC)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '..3.5...7.96..85.....3.2...3....7.6...2...9...8.2....5...9.4.....18..63.4...1.8..',\r\n        desc: 'Devious grade from Sudoku+. (NS3 / F2 / 5 X-cycle / XY-chain)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '000008040009040000006203008042009003005000800800400970200307500000090300030800000',\r\n        desc: 'Devious grade from Sudoku+. (NS3 / F2 / 2 X-cycle / XY-chain)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '000004000000170600480356100004007500000010700500020034950000006120000008000000000',\r\n        desc: 'NS3 exampe from Hodoku.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '000000060000030047032500000600007005207010908081004000000002000000000001005870000',\r\n        desc: 'NS4 exampe from Hodoku.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '000030086000020000000008500371000094900000005400007600200700800030005000700004030',\r\n        desc: 'HS2 exampe from SudokuWiki.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '009032000000700000162000000010020560000900000050000107000000403026009000005870000',\r\n        desc: '2 NS2 / 2 HS2'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '500010003006003002003200000002300076000050000190007500000009400200800600900040005',\r\n        desc: 'F3 example from SudokuWiki.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '000400080420000000900030010010070059050001300800040000508000007001902060002500008',\r\n        desc: 'vaithak/Sudoku-Generator (NS2 / 3 XY-chain / 2 AIC)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '.9..8...3..5...7..42..7.........7..9....9.821..31.....3....5.47......1...71.....6',\r\n        desc: 'By me: Extreme (X-wing, XY-cycle, UR, AIC, forcing chains)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '.8...9.3.....4....9.....8.2..8.....4......3292...13..76.9.51...5.132.......6..5..',\r\n        desc: 'By me: Extreme (hidden UR, APE, AIC, forcing chains)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '..2..85....9.5..1.3.1.....6...8....5..3.1..9.7..3.........27.63.........6..5.178.',\r\n        desc: 'By me: Very difficult (WXYZ-wing, aligned pair exclusion, grouped AIC)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '4...78.9......17.........84.43....7.56...3...........8.768..91..9..2....8...1.2.6',\r\n        desc: 'By me: Very difficult'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '1.........96...3.8..3.496....4..3..9..7582..6......5....5..1....2..6..3....4...7.',\r\n        desc: 'By me: W-wing erasing 4 candidates'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '.5..137.....75.8....6.............946...8..1.5.....2...91..8..7...9......8....3..',\r\n        desc: 'By me: naked pair, X-cycle.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '34..8..5..6.....7...9.....1.361......2..........4.28..6.5..9.17.......9.....532..',\r\n        desc: 'By me: naked pair/triple, X-cycle, AIC.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '56....2......23.7.9......3..5....9......4.6...42..7..54.8.927..2....8.......3....',\r\n        desc: 'By me: naked pair/triple, X-cycle.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '...1....6.7.4..5....63.8..........1.1...69.2.8.7.......3.....5..218.7.........3..',\r\n        desc: 'By me: naked pair, XY-wing, X-cycle.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '...582....3.9..7.24.8..1.......57.6.........1.63.2...........4...9.3..5.5..84....',\r\n        desc: 'By me: XY-wing.'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '...58.41........8.4...7.....1...73...5.6....19..1..5...86.....7.....6...57...9..6',\r\n        desc: 'By me: naked pair, X-wing'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '5.1.9..2.68.............1.7.7..1.....4.5....3.......4.3...897.....45.8..2......3.',\r\n        desc: 'By me: naked pair, X-wing'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '....3......8.19....2.....51.6......9..3...7..4...53.6....7..5.6.4.....8.1....2.3.',\r\n        desc: 'By me: naked pair, X-cycle'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '14.3....7....2...8.7....6...5...3....37.8...661.....8......19.......8.3.....95..2',\r\n        desc: 'By me: naked triple, XY-wing, AIC'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '.31...6..68...2........5..797.3........52...3....76.....4..975........122...6.4..',\r\n        desc: 'By me: naked pair/triple, X-cycle, X-wing, AIC'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '......169..1..42.....5.......2.....39....7.....62.....1..6..5.4.4.8.......5.2.918',\r\n        desc: 'By me: naked triple, X-cycle'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '...6721...2..3.............9...5...41.....7...5.....8..4372.6.95...1.3..7....6..5',\r\n        desc: 'By me: hidden triple'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '45...2...8.17.................9.6....8..3..5..76.....11....9..4.....5376...4....8',\r\n        desc: 'By me: naked pair, XY-wing'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '...6...82...7.94.5....5.7..9.....5..68..2.......5..9.8..3...67.5....6.1..1..8....',\r\n        desc: 'By me: naked pair, AIC'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '.59..1.....78....4.3.....2..4.21.......6.........54.6832.....8.....4...19...86..5',\r\n        desc: 'By me: naked pair/triple, XY-wing, AIC'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '..9.6....1...2..94...5...2.....1.....9.6.7...7...5...8..4..5..75.6.4...1....8.2..',\r\n        desc: 'By me: naked pair, AIC'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '..9.6.87...78.....4....9.2..4...8.5.......4....29.....3..1....75.6..29...71..62..',\r\n        desc: 'By me: AIC'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '6...3587......96.....8...51..51...49....2....47....2........5....7.96...19.......',\r\n        desc: 'By me: XY-wing (twice)'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '..............2.6191......2..8...1.....5....92..9.3..7...4...7.5.13....6..4.97...',\r\n        desc: 'By me: X-cycle, AIC'\r\n    },\r\n    {\r\n        format: 'simple',\r\n        data: '.7.2.8.....2...1..6......53...3.....8...42.3.2...1..4.98.4.5...5...8.....2...9.6.',\r\n        desc: 'By me, naked pair (5 times), X-cycle (3 times), AIC'\r\n    },\r\n];\r\nconst batchAdd = (str, desc_gen) => {\r\n    let count = 0;\r\n    str.split(/[\\n\\r]+/).forEach((data, i) => {\r\n        if (data.length < 81) {\r\n            return;\r\n        }\r\n        else if (data.slice(0, 2) == '/*') {\r\n            return;\r\n        }\r\n        exports.database.push({\r\n            format: 'simple',\r\n            data: data,\r\n            desc: desc_gen(++count)\r\n        });\r\n    });\r\n};\r\nconst list_unknown = `\r\n..5..8......4..7..637.5....14..............21.2.....68....349...9....8....4.172..\r\n.1...........6.7.3....59..4..3.8....5..7..42..2.1.......6...9....152....8.....236\r\n.....869.....6..53....5.1...436..5..5........7..1..3682.6.......91...........7.3.\r\n4.....6....2..1.....72.9..4.....25....8....2.7.....3.8.....491.3....6...854.1....\r\n.5.6..9....4751...3....94..4.......1..1537..8.3......2..7......5...1...4...3.2...\r\n....439.7.84.51............46..9...1..1..76...3..6....617.....9.23.........3...5.\r\n1...43..79..7..2....6.2..1...5....3......7...7...6.5.26........5..91.....493.2...\r\n..2...9....4....6..7...94....5.9..3......7...7..1...92.1...5....2...68.48..37..5.\r\n..2...9....4....6..7...9.......9.73..9..37.4....16...2..748....5.....8.....3..156\r\n..6.3....5....1..414..5..3....6..8..68....5...9..4......912...3........9..19.7...\r\n9.64...5..3.79....1....6.3...3...89....3..5.7....4...6.5.....7.27..6...9..1.8....\r\n..64...5.5...9.....4.....3..1.6..8....23...4.7.......6..9.2......4...1......87..5\r\n...4.8.....8.91.....7..6.3.4...7.89...2.1...77.5..2..6.5..2......4.....9.61...4..\r\n92...8..1.3.........7.5....4...7..9.....1.5.7.9...2.........6.......3.8..619..4..\r\n4...5...39.371.....7638....8.....5...6.....81..56........1..7.97.....1...2..4.8..\r\n.1...9..39..71......6..4....9.4.15.73......8............4......7..8.51.452.9...3.\r\n.1...9.7.9..71...8....8...5..2.....7.6...24....5.78.9..8.1.....7..8.5..4.......3.\r\n...2.9.7.9537.......6..4..5.........3..5..4.114..78..2.8.......7.9.6..........83.\r\n....5...395...6.4.....8..1.8..4.....3.7.9.4..1.......2.84...7.......5....21.....6\r\n..8.476..4...8..7...2.....85..37......15.82.......6...........27.....48.914......\r\n.58.....94.......1.7.63.5...8.......641..8.......1..9....75.....2..........8.375.\r\n.5..4.6.....2...71........85..3.......159.23...7......8....49.27...61.83..4......\r\n...........6.85..1..2...54.58..7.1...4......7...4.6...8...549.....9....3.1......6\r\n35..4......6....71...63.....8........4.59....2.....8........912....6..8..148...56\r\n7......24....9...5..5...1......3.4.1.4...2.....1..63..9724.....3........4..6...57\r\n7....1.24.3...8.6.2.5.6..3.6...3.........25....1....7.9.24.5....5.9....8.........\r\n.69..1.2.........5...7..1..6...3.4.1.4...2.9...184.....7.4..6..35...72....8......\r\n7..3.........9....28...4..9......4..8.3.725...9...6.7.97..8.....5....24...8.2....\r\n.69..18..13..9.......7...3..2.53..8..4...2.......4.37.972..................6.39..\r\n61...2..9...4...71.5.....823...8....2.17..................96..7..7.1....42.3...9.\r\n...........24...71754.....234.1.......17..8.5....23.1......6457.9........263.....\r\n.....2.4......85.1.5.93...2..9......2.....8...756......83.....7....14.6..2..5.1.8\r\n..857......2..8..17..9..6.....1.....2..74....8.5..39..1......57...8.42.........9.\r\n...5..3.99.24..57...4......3..18...6.....9....75........3...4......1..6........98\r\n.6..2.....3..7.65....8...299...6...4.823.....7.1..9.....5..3.6...............5.91\r\n..9.2.1....4...6.85...3..........2.46......15.41....8....7..8..1..6.2...32...5.9.\r\n86..2......4.7.....178..42...31...7.........5.4....3.6.....386.........3.2.4..7..\r\n......137.......58.1.8..4...5.1..27..8....9.5...2.....4..7....2..8..2..33.64.5...\r\n8....4.3.2.......8.17.........1......8.3..91...1.5..8.49...38.........4.3.64.57..\r\n3....9..8.1..5.72.49..........5.....5...8.9......7.61.8.9....6.......8...247.....\r\n3..6..4.8.1.....2.49............1.8....3....2..3..4..5.....5.6.75......11....8.93\r\n..2...4......5.....9.827.......9.3.4...3..972......61.8.91...6..5...2..1.24..8...\r\n....1.......4....949..2..36.67..1.8...13...7.9832......3..........9.2.4....76...3\r\n...6..4..6.8...729..5..7......59.......3.6.7..8...4...839.4.....5.9....1....6.5..\r\n.4......8.......566....921...35........83....7.......1.....6...5.84...2.31..25...\r\n.456...3..3...8..6.8..59........14....1......7..2..3......8..4.....73.2......5..7\r\n....1.7..........668.3.9.......6...24...37....5.....812..1.....5.8.7..2..1.9.5...\r\n9...12...1..7...5....3...1489.....7.....37....56.....1.79...5..5..4...2.....258..\r\n...6127.8.3.7...5.......2...9.5........8..69.75..........186........3.2931.9.....\r\n......4...9..1.7......58....8....9.11..26..5..........9..4...168...7.....2.5....4\r\n...7..4..3...1...546....1...8.....2.....6.3..........7...4.25..85.1.....6.1.398..\r\n.1...34.9.9......54.7..8......3..9.1....67..............3.82.1..5..7.2.......9.74\r\n....2...9...6.478...7...1...86..5....4.......2...916.......251.....7.2..6...3...4\r\n...7.......26...85.6..5............11.....3...35.9..4797.48....8...7.2.....5....4\r\n.5.......46.7...1..283..56......187....5.4..62.....3.........3...76..4....5.4....\r\n.5...67.......8...72..19.64.3.....79.795...2..........1.2.....8.9....4.1.....3...\r\n..1..6..3......91..28....6...4...8.9...5......168.........7....3.7.8.4..6..1.32..\r\n.........4...589.2..8...5.4...2.18...7......6....9......2...6.83...8......5143.9.\r\n9..........3..89..7..3...6.5....1.7...9.34...........51..9....8...6...5.68......7\r\n96....8....1..2.....8...7..1.2.5...98.6.........31...5.2.....7.....8..5....4.7..2\r\n...17..24.7.......2.8...73...2.5...98.6.2.......3....5...5.1..8..72..4..5........\r\n.6...38...7...25..24..9...11.2.5.6........3.7..4...........1..8....89...5......6.\r\n..5...82...1..2596.4.......1.27...4.8.6...3.....3......2..6.97......9......43..6.\r\n..517...43..........8...73....7..6...5.9.4.........2...2..6..7..1..8.......437.6.\r\n.....1...6..74.5...57.3.4............1.8...3.2.4...7.5.91.8.36............51.6.7.\r\n4......9..8.....1.1.7.38.2.97...3..1..68.42...34...7...............97..4...12..7.\r\n4....1...68....5..1..9....6......6......74.3..3.61..8.7...8..6...239.....4....97.\r\n..356...7.8.7..5..1.....4.6.7..536.....8.....2.4..978......5...86..9.1......2....\r\n4.3....9..89..2..3......4....8253...5..8.4.......1.7..7.1....6..6..9.1..........8\r\n6.8.1.....9.......7.5.....9...5...764...8.3.1.....642....1...53.2...89...6.3.....\r\n.4..1....3.24.....7.5.63.........87.456.....1...9.6.2598.....53.......1.....9...2\r\n6.82....7..2.57.......6..49...5.18...5.7.23......3....9.....6..5...78..........82\r\n648.....7..2.5....71........3..4..7...6..23...7...64.....1..65..2..7..1....3.....\r\n....1..3.3..45...8.1....24..3.54.8.....7......7193..........65..2...8.....4.9....\r\n.8..1...4.....91.......7...96......38..7.6......2..5...7..2..18...9...7..42..1.3.\r\n...51.3...5......74..........4.....38...36...1..2.4.8..79...4.....9.32.5...8...3.\r\n.8...2..4.......6...13.7.5.9...5.7.........41.37.......7..2....6.8.4....5....163.\r\n.....23...5.......491.......6.15.7....5.3........94.8..7...54.8.....3..5.42......\r\n..6.123.4.5...9...4........9.......3.25.369.1......5.....6......1....2.5...871...\r\n4....7.....7154.3.8.2.6.......2..4.......1.......3.28..1.6......84.....3.7...3..6\r\n..1..76.5...1..8..8...69..43.62......2......9........75.......8....1..2..7.4...1.\r\n.318....5.....4.....2.6..7.3.......1.2...1.6....9...87.1.6..........59.3..9.83...\r\n43...7..5....548......6...4..62..4....8....6.14.9..2.751.............92..7...3...\r\n4.18..69.9.7.....2....6..7.....7.4...285.......5....8.5...9.7......1...3.....3...\r\n..........6..3.9.2981....73.......96.5.2.....3...95......9.8.2.....6....23.7...1.\r\n........14..83.........64.....1...96.5...7......6.5.8..4.9...2.1.....74.2.....61.\r\n5..4.9.....7....52....2.4.3..2..3......2.7..4.....5.87.4..1.....95.....8...7...1.\r\n5....98..4..83......1......87.1435...5..8....3.4.95....4..1...5.....274.2......19\r\n.....98..4..83..5..81..6.7....14.5.6.5928.1.....6..2....6.............4.2....4..9\r\n91.7........2.4..6..7.....5.......64....9.73.8.46..1..3....7....4..8.....58..9..1\r\n..2.6...3.8.2..9....7..8..51.....5..6..4...........129.9....8.2.4.5..3.....32....\r\n..2......5.........6.9.8.15..9.......2.4...3....65.....9...7.5...15..3.7..8..9..1\r\n..2............9..46.....1.1.9.....4..54.1.3....65......6..7.5.....8.3.77..329...\r\n.12.........2.4....6..38.1.........4..5....38.7.6......9.1....2...5..3..7...2.6.1\r\n.3...4..7.25..6...6.9...........9..38.....1....6.17..4.921...8....7.......12..9..\r\n.....4.97...9..3.....831....1..8..6........799..3.7..43.2......5...9.23.....6....\r\n.3...4..7..59.....6..8..........9.6.8..6..1.9.5...7..4...1...86..4....3....2..9..\r\n.......9742.9.6......8..4...17....6...3.52...9.......43...4...6.6...8.31.8.2.....\r\n.3....697..5.....8.....1.5...........4.6.2...9..31.8....2........4.9..317.126..4.\r\n.4.26.5...7.8...1..8..............36.2.6.1....9....275..2.....47............928.3\r\n....6.....79....1.2......49....27.........49.69...3275....1..5...8..69..4.5.....3\r\n1.3..9......8......86..5..........3....651.9...14..2..9......547...4..21...7.....\r\n14..6.5....9.....22...7.3...54....3....6...9..9148......2...7...3.546........2.6.\r\n1.....5......3..1.28..........9.71.63...5..9...........6.31..5...8..69....57...63\r\n.583....7..7.....6.....9...41...........914..3.....6...6.21.9...49.86.35......7..\r\n.58......9.71..8..6.........12.3...9.7....4.3..5.2..1....2.5.8.2...86.3.......7..\r\n..83..2.7.....28.....8.9.51412.........5....3.9.4.......3.1....2.9..6....8....7..\r\n15.3.4..7.3...2.4.6.....3....2..8.......91....954....87...........7...35.81......\r\n..8.64.....7.52.4.......3.1......5.98......2..954.7..8.6......42.9.8..3.......7..\r\n..2.1.....5...4..98.6....1...573.4.......2...4.....9.57..9.....2...46..3......286\r\n..2...3.....2.46.984....5....573..21.........4......3...3......21.5.6...5...7..8.\r\n9.........51.........3.7..2.......2.1.94......2.....35...9.81.42..5..7......7...6\r\n972..........84.......9....6.5.....11..4....7.2....9...6...8.5...85...9...41.32.6\r\n9..6.....3......7..4..9..1..85.394.......2..7.2.8..9......2......8.4..93.......86\r\n..5....4..1....2..2..34....7..2....5.....942....6.4.91.8...6.....2.........71.6.8\r\n8..1....6.....5.......4..197..2.1.6......9..3...6..7.....4..1..1.25.3.....47..65.\r\n..5..7.4..1..6.2...7......9....3.....51......3..6.4......49..3..6...3.74....12.5.\r\n...1.7.46..3......2...4..1.........56..8.9..3..86.4..1..7.......6.5...749......5.\r\n....2..46...9.5.........51.749...8..........3..8....9...7.96..2..2.8....9..71..58\r\n.6.32..7.........37...6..2.95.1..2..2..........1..3..9..2.31.57..9..4......7..9..\r\n1.5.2..7....5...9.7..46.....5......8.3......184...3...68....4.......43.....7.298.\r\n.65..9..4.........79....1...5..4.2.8...89.7......73...68...1......6....2.14..29..\r\n...3..8...2.51..9.79...8...9....62..........18....3...6......57.......1.3.4..2...\r\n..5..9.......17.9.........59..1.62...3....7..84.......6.2...4....96...1.3..7.2..6\r\n17.3......2.....8......81.2....4..51.....96....712..4.6.........4...3...93.57...4\r\n17......6...9..3.......8..22..8.6.5.5.4.3.6....71.59...8.......7.5...2...3...1..4\r\n.7.3..4.6.......8....46...22....6...5.47.......712..4..8.......7......1..32..18..\r\n17..5..9...6.......594...7...3..6.5..1.7..6..8...2.........45.....6..2..93...1...\r\n...3.2..64.69...85...4..1..2.3..67...1..............43.8.........5...21.932..1.6.\r\n.8......4...7.....3...2....8.3..6.1..7.53.68...9.....5..5.9.34.1..........835...2\r\n......9.....78..2331.......8..9..2.74.153....2....7...7..69.3....6.....8....51...\r\n........469.7..1.3.1....85.8.......7...5.26..26..1.....25...3...3.....98....51...\r\n..2.6..74...7...2.......8.68..9.6.....1.3.....6.8....5.2...83..1....4.9....3..7.2\r\n.8..63.....47.5..3.1..29..........1.4..5..6..2.9..74..7.........3....5.89.......2\r\n......9...7..56.388.97............4.26.8.7...4...61....3.6..........5..7..8.12...\r\n.2.18....1.4....3.8.9.....4...2..7462..8.......7..1...9..67...2........7.48....5.\r\n.26.8.......9.6..8...7......8..3...6.6...7...49.5...2...5...412....9.3.........5.\r\n.2.1.4.........2.8.59..3...5....974.......59.....618...........61...5..774.3..6..\r\n..6...9..1.......8...7.31..5....9..6...84......7...8239........6...95.....83.2.5.\r\n18....6.2.6...7..5...4....19...1......5.......47..9.......3..9.5.6.........9851.6\r\n...5........1.7845..2...93...86..4.....87...........1.8...3..9...62.....4.3...12.\r\n.....3.7.36....845.5....9......1.......8..3.9.47....1..217.......6.4.7.......5..6\r\n1.4..3..2..9...8......68...938...45...5...36......9....2.7..........1.834.....1..\r\n..4...67.36..2.....5.4....19.8.1.4..2..........7.592...2...65...9.24...3.........\r\n5....28.79..........2.5.....46.9.17...1........8..4......9....5...278..4...1..3..\r\n....6...79...8....48.75..31..6..3.....1..74.9.......5......6.8..35......8......2.\r\n...4.28.796..8.......7......4...31..35....4....8..42..1...36..5....7.9.........2.\r\n.1.........7...5..48.7...3...6....7.3..8..4.9.9.6....3......78...5........9.45.26\r\n.1....8...6..81......75..3.2.6..3.7.........9..861....1...3...5..52..9....9.4...6\r\n....7.6...76.....2.93...8.1...7.5.......645.........2..5.6.1..83.8.4.2...17....9.\r\n18...3.....6.....22..45.......7.........645.3.4..9..27.5...1..........1.4.7....96\r\n1...7.6.....81.......4.6.7.8..72....7.9...5...45.9..2....6...48..............239.\r\n.8..7......6.....22.....8.1831..59..7....4.......9..2...26.1...3.............2.96\r\n...2..6.........3.29.456.............2....5.3.45.98.2......1.48.689....54.7..23..\r\n.8..4.........8.492...7.....917......3....5.6.4.....7....8.....6....429.....2.41.\r\n....4......3..87...5.1....389...5.2........8..4...2..142.81.6...1......7.7....4..\r\n.8.....5.1......4.254...86.8.......4.3..9.5....63......2.8.7.......3..97.....6.1.\r\n98...31..1...5......4..............47...9.5..5..38..71....17.3.6.8...2...75.....8\r\n.8..4....16...8.492..1.....8......2.7..49.5....6...9....98.7....1..3...7..5...4..\r\n.....6..2..198..........3...1.43...63.......7...71..9..275....45.....1.9..3...2..\r\n..5.76...2...8.7.5....5.3.17.....8.......9...68...25.3.2.......5.6...1..1...4....\r\n4.....9.22.1..37.5....54.......3.82..........6.4.1...3..7.9.6....63...7..9....2..\r\n......9....19.3.....8....61.194......5.86........12..3.2.....345.....1.....6....8\r\n.......8...1..37..9..2............26..28...1...47.....8...9.6..5.....1...9.64..58\r\n42........8..6.7..5.64....3....1.6.42..8......4.....7..7...3..6....2.381......5..\r\n...3.1..5.839.5..2..6...8.....2.9...2...4...9.4...6.7.87..5.4.....7....1.......2.\r\n4...81.65......7....64....3..8..9..4..5..71....153.2...7....4.6...7...8.....98...\r\n4.....9.5...96....5...7..13.3..1...4...............278..2.53..6..97.......4...5..\r\n...3.........6.7.2596..2.....8..9.5..6.....3.....3.27.872...4.6.....4..1..4......\r\n.....74...1....23.63.....51......1......285..8.2.3..7....56.....4.7.....2..4..96.\r\n.........41...6.3.6..2..75.56.9....81...2.....9..3...4..95.....3.....81.......9.7\r\n9.....4......5..396..2..75..6.........46..5.38...3..747....1.......9..15.5...3...\r\n.2.3...864.7.....9..........639.4...1....8.....2....7..8..61....4...2..5..1.8...7\r\n9...1..8.......23..3..49...5.3.....8.7.62..9.......6.478..61...3..7..815.........\r\n....3...76..1......1.95.......2.......9....3116...7.9...4...379.....8..2.7..9.81.\r\n495..........7......7..26........78.7.9....31..2.8.....5.62...9.3..4..62....9.8..\r\n4...3.....2..7.9....7.5.64.54..19....8.....31..2......8..6..3.....74....276...8..\r\n4..8....7.2..7..5....9..6..5.........8.46..31..2......8.....3..9..7....2..6.9.8..\r\n4..8.........7..5.3..9.26..5.3.1.......4.........87.9...4.2..79..1...5..2.6....1.\r\n..31.29..5...4.....29......74..1..2.8......9........46.3.5.6.....8....7....327..5\r\n...1.....57..4....12......4.4....32....7...91....5.7.......6.....849...3..4.2.8.5\r\n48.16.9.....94.........5.3.745.....8.......91.9........3..8......84.1.7.....2..6.\r\n.8.....57...943......8.5......6.93.8...........1...74...7..6.1......12.39.4......\r\n4...6...75..9..18.1..87..3.....1.....6...45...9.2..7......8..1....4..2.3.....7...\r\n..2.....5.5....7....4.2.89..6...9.5..7.....4.5...86...6.7...3.4...831...2.1......\r\n..2.1.46.3..94.7..7...........1.......8....46....8.1.....592...945.......3.7...8.\r\n..23.7....5.9.......4....9..6.1...5.17..5............7.....23.49.....6....17.4..9\r\n8...1..65...........4..5.9......9.5817........29.....7....923..9..8..67.....64...\r\n..2317............7.4.25....6....25...8..3.....9.8...76.....31....8....2.3....5..\r\n.94......75....3.....4...8..3.....7.....2.6.1....96.2.2....7.15..5....3.4.31.5.9.\r\n..4...1....8.1.34.....7....6..5....4...3......4.79.82..6....4.5.....2..6..3....9.\r\n...25.16.7.........2...3.8...2...9.4.87.......4..96..........1.8...4....4..165.98\r\n...2.8.6.7..6....21......896..58.9.......4...5.......3....3.4.5...9427...73..5...\r\n.....8..7.......4.12.......6...8....9.7..4.5.5......23...83.4...1..4......3.65.9.\r\n...3...5..........4...751..3....7.2...52.184.18..........5......76..951......86.9\r\n91...4.5...81.2.......7..9.3.48.........6.8..1.....7...3.5......7...9.1.......6..\r\n.....425.65..9......3..5..83.......1...2....3.82.4.........648.....3....5.17...3.\r\n..7.....6.5..92...4....51.83..8...2..........1.....76..3...6.8...6.395..5..7....9\r\n...3......58.92....2...5...36...7......2.1.431..9....5..........7...95.25....86.9\r\n.....2.....89..453.....571....6...4.5....8...28.3.....6.....9..1.5..3.8..7..1....\r\n.....2.9.7.89.....4.6....1.9..627...5..........4...16.....8.9..1....32......1..34\r\n...47....72......3.9..3..1.9..6278.5..7........4...1...3.58...1......28......6...\r\n....7..9.7.8..1.5...68.5.1....6..8..5...4.3......5..6..3.......14..9.......2.65..\r\n............9.1..34.6..5.....362..45........92....916..3.58....1.....2...7...6...\r\n......9...7..69.2..6...374...54....16..............879.9..572....42..5...56......\r\n..37.1.8.4.85.....1......4..8..7.6....7...4.2.42.....9.............96.1.2...8.397\r\n5....1..6.....9....6.8...459...7..3..1............58.....3..264.3.......2.61....7\r\n...7........56.12.1.........85...6......38..234..1..........26...4....18.5...439.\r\n..3.4.98.4...6..2...98....5.8.....3.6.....4....2.1.....9...7........65.82....439.\r\n.....41...4..3.....39.6...27.....231.....95....8..1.97........5623.5...9....72...\r\n..62....3.4......6......84.7...86...3..7.95.4....4..9..8761...........1..1....3..\r\n..6...15........7..3.1.......45.6.......2..8425.3......87.......2.4..7.9415..23..\r\n..62..1.3142...........7.......8....361....84...3..6...876.3........8..9..5..2.6.\r\n..6.9.1.3...8.5..6.....7.4..9......13.....58.....4........1..2..2..5...9.1597.3..\r\n.28...4..4..........79.213.....6..91.9148.....3..7...4.......7...3...2..2....7..5\r\n......459.1.53.....679.........6.7.1.......6..3.1...84.....4..3.73......2....78.5\r\n...716....19....2.5...........2...9.....853.....17.5.4.....49.3.73.5......6....1.\r\n32.71..5..1..3.6..5...4...8...2...91....85..2.....9......624....7.........6...8..\r\n....16459.1..3.....6..421...542.....7.....3....2..9.8.......9..97.8.1..6........5\r\n.51.7.....843...6........493......9...8.21.........1...9578.4....3.5...6.....6.5.\r\n.5.6.4..22..39...173.2..54.....6...4....21..5..9................43..9.7..2..3....\r\n.......82...39.....36.....9..2...8..4...216.....8..1.7.9...2.1...3.......2743....\r\n95..74....8...5.61....1.....1..6.89.4..9......6...........82.....31........4..95.\r\n.....43.2..43..7....6.1..4.3...6.........1...5..8...2...57...1.84...9.....7.36.5.\r\n7..84.9..1.....8.......2..495........3.15...9....6..8.3......7...9......82...16..\r\n.6...5.3.19...6..5.8..1.7......8...6..8.5...924.......3...9........2.158...4..6..\r\n7....5.......36.....391.7..........66.....2.92..3...8........7.4...2.1..8254.....\r\n7.........94...82.5.......4.5..8..1.63...7.......69....1.5..4..4.9.2...8....7.6..\r\n...8......94....25....12.6......43.66.8..7.49..13........5......7...31..8.5....9.\r\n8....29......9.35...6.8..2..2...16....1463...3.5......1.3.4..7....2..54.........6\r\n...1..9.4...7...5..96.8....4...71....7.46.2..3.5......1.......2.89.............96\r\n8......6....79...8..63...2..2.....39....6......5..8..7.5..4....6...17.4...2..5...\r\n8........21.7..3..5....47.......16.99...6...5....28.1..5...9..26..2...4..4..3....\r\n.37..2..4..4.9....5..3...2..28.7..39......28..............4....689.1....7..83..96\r\n6..9..........49....2.....5...3.1.6..8..9.2.....8....1....4..7..1..376.95.6......\r\n.5.....4.7.1........2..83.5...35...41.....2.....8.2.9...9.451.8....3...9.7....4..\r\n.5...3.......2.9..94...8..5.9...1...1..4..2....3.....1.2..45.......3.6..5...894.3\r\n...9.3..27..........2..831......1..4.8.4......638.2...3.9.4........376.9.......2.\r\n...91..4..3..2..8.......3.5......8...8...6.3746...2...3.9.........2..659...1...2.\r\n..24.7....3.26....9.5...6.......3...16..........7924.6.73..8........653.........2\r\n.1......8.3.2..1..9.53.....72.6.........4......8...41....5.8......9.6..4.9....7.2\r\n..2....9.83.26..4.....8...7.24..3...16...5..3.............2...1....7.5..5..1..7..\r\n6...5.3.....2.9......381.277.4.1......98.5..33......1...3.2.......9....4.9.....8.\r\n.1.....98..726...5.....16...2....8.9.......7.3.8..241....5....1...9...3...6...7.2\r\n1..5..6..7...3...4....8..7...8.....3.......51..47...............7.94...6.9.6.18.2\r\n...527....8....9..2...8...5......7636...9...1.1.....8..6..5..9..7...3.1.5..6....2\r\n.4.....3.7.......4.36.8......821.7..............7...8946..5...7.72...5..5....18..\r\n..9..763..8.1.....2.6.8.........47.36.7...4...1...5....6.......8......1..9.6.1.4.\r\n1..5.7.3.7.....9.4.3......5.5........2.3.8...314..52..........7...94..1.5...71...\r\n.2.5..71..3.7..26......4.......81...9.165.8.287............6......4..9....29....6\r\n4...637.........6....1.4.......8..7...165...28....9..1.9.........7.329....2.751.6\r\n.2..6.......7..2......2.5.3..6.8.47...1.....2..32....1.9...6......43.....829.5..6\r\n4...6.7...3.7...6......459..5...1...9..........3.4..5..948.6..7..74.2...3...7.1..\r\n.2...3..8..57...6......4.9.....8.4.9..1.5.....73...6.1..4...3........9..38...5.4.\r\n.6.1.3.....8.62.7...1.........2.8..6.896...12..24........3.....53..7..6...7...5..\r\n.6..4.92.9.85.2..1......6..1..2.8.......3.7....24....3.....4.....4.71..9......5..\r\n.651.3........2.....1....4.....9.4..4.9.35.12.....789...6.....75..8..2...1...6...\r\n76...............1....89.45..3.......89.3..126...1.8.....35.....3....26....9.65..\r\n.6..4..289.......1.2.78....1.3....5...96.57..6....78...9.......5.4..........2..34\r\n..936..1.1.6.....7...2...3.8...1.45....7..8...4...5........8...6.......3.7...9.2.\r\n.....7..41.6....8......163..6...3..2.2...6.9..4.8........4...6...8.5...34...3.1..\r\n289.....4.3.5.4........1..9.6..13.5.....4....9...2.3....2......6...5.7...7.6....8\r\n2.......4.3..94...75..8.......913....2.....9.......3......7.9..69...2.43....3.12.\r\n2893........5.4.8...4.....9.6..1..5...3.....19...2.....12.7..6.6..1......75......\r\n.65....7.3.18......7..9.6......4..63......941...3..5....62......3..8....15.6...39\r\n....21..83......95...59.6..5....28....3.5.9.1.4.3.8....9....1..4...........67..3.\r\n.65...37.3.........7..93..251..42......75.9....9..8.....6...1.4....89....5...42.9\r\n9..4.1....2.....9....5..6..5....2.63..37....1....18.2...6.....4.3..8..........2.9\r\n....2......1...4.58.4...6..5...4.8.....7.6..1.49...5...9...5.8.43...9......67....\r\n.........2...94..773.6..8.1.4....2....5..8....2.7.53...5...7.4.6.1....8........3.\r\n.96..14..2..3.....7...5.8.18...6...5.........1.9.4...8..32...4.......5...82..6...\r\n5..8.............7.3...289...7...2153........12.....68..32.7.......395..4....6..9\r\n5....142.....94..7..4.5.8........2...6...8...1..7..3.8...2....6..1.3.5..4.......9\r\n.....1....18..465....65....8.7..321..6..2.9.4..9.4...895...7.......3........1..3.\r\n..6........56...8494..3..5..5......212.49........6....79.....4....185.69.........\r\n.8..5...721.6.......783....65....8....34..6.......24.........4.....8....5....7..3\r\n3.6.....72.5....84.....12....4.13.....34..6.5...56....7..3......3.......5..94.1..\r\n....54..7.....9.8.9..831....5......2.234.........6....7.....5.84....57...6.9..123\r\n..6.54....1........4..3.2...5...........9.67.8.95.2....91.2...8..21..7....8..7..3\r\n7..3.5.......786....4.....2.7..5...99...2.8.........2..5.1.6..4.9.....1.4......98\r\n.2.34.9...1.2.8.....46....267.....3......18.....9...2...8..63....7...5..4...3...8\r\n7....59.......8..3.3....7.2.728.........21.6.18..6...7.5...63.4.9.....1.....3.2..\r\n7...4.....192............5.67.8..13..4..2.......9....7.5...6.7.3........4.15...9.\r\n7..3....1..9...........9.52..285.....437..8....5.6........9..74.....251....53..9.\r\n..6...7..8.2........7.5.9.4...27....6...4.3...4..8...1..45.8...12.7....8........9\r\n4.6....83.9...7.....7.5.....3............5.....96.357...4....3.....9.6..78..6.41.\r\n4....1..3..2..7.......5.9.45...7.8..6..1.....24...3..1...5..2.7..3.9........6.4..\r\n.....1...89.43...53.78.......12.9......1..3.........7..6......7....9...8.85.6.41.\r\n..6.21..3.9.....6.31......4......8.6..8.45...24......1.6...8.3....79..5.7.....4..\r\n..7.6.....2....9......17.24...5...1.7.9.4....612.8.......4.....9....813...3...8.6\r\n1..26..........971.....7...3......1....34.2..6...8..5...1..25.7.4.6...32.7..9....\r\n1.....3..4.6.........9.7.....452...9.5.....68...7..4.38.1.32....4...8....7.1.....\r\n...2.........5.971..8...6.4....267.9.5.3......1...9.5....4...97..5.......73.9.8..\r\n..7......4......7.5.8......3..5....9..93...686.27..4.......25.79..6..1......9.84.\r\n2..9...8......8........479..81..5..9.......387..2.3...8.7....25..4......56..32..4\r\n.......86..5....4.61.5......81..5......197...7.6.83.5...7...9.5.2...9.67.6..3....\r\n.4.97..8..7........1..24.93..1.4.2..4.........9.283...8.......5.....9.6.5...3...4\r\n2.......6......1.....5.4..3.8.....7..5..9.6...96.8.....3.4.692........6.5..7.28..\r\n.4..71..69..3......18..4....81..52...5.1...3...6...4.......6..5....5.3......3...4\r\n6...7..15..12....3..91..4...1.9...38..3.6..4.7........26..87....5............3...\r\n......9..5....6.738.9.3..2..169...........542.....8.6.2....7...3..6...84.........\r\n.......1......68.3.7.1.5.....6...73.9....1..2....4......45.....3.7....84....23.5.\r\n..28....5.....687..7.....26.1..5........6.......3.8...2.4..7.9.35..1.2...9....6.7\r\n63...49.55.......3....3..2..1.9.2...9..7.1.4......8.6.2.4.......5.....8...8...6.7\r\n3..68.....1.....5.....5...3.4..1....1.5.4.7.....9....67.....3.9..4.....2..68...1.\r\n..96.....4.......7......9.36..71........4...8.72.3.....8.5...69.3.1.9....2.....1.\r\n..9.....141.3.........5.9...43..8........673.87....1....1..43.95......7....87...4\r\n.5..87.........6...6.4......4..1......524...8..29.5.4.7.1.2.3.........7.9..8.35..\r\n..9......4..3.2..7...4....3...7....5.9...6....7..3.1...8.......5.4..98.2..6.7..1.\r\n......1..842.....676...9......9...45..3.7...8..9..4....3..4..8....856..9.1.......\r\n.95...1.....3.....7.1......1..93...54...7...862..8..3....14..8.......3.9...2...6.\r\n3..7..1...4.3.5.7..61........7..2..........98.29..4.....6....8.....56..9.18...4..\r\n...7.8..4......976..1..98..187.32.....36.......9..4...9.61.....2...5..1........6.\r\n.9........42...9.6..1.2...3.8.9...4....67.2......8.73...61475..2........518......\r\n.9.......1.....8.4...8.7.5.6.3...5..74.......8...14..2.2..3...7....863.....2...65\r\n5.....2..1...6.....6.8.7.5..13.....9..2.5.....5.6.4.3...6...987...4....1....79...\r\n..8..1.......6..9......71.361.7..5.......3.1..59..47...2..35.8..7.4...........4.5\r\n59...........62.....4..715.......54......3.......1.7.2.2...59.7...48.....812.9...\r\n..8...2.....5...94.....71.36..........29...1......47..4.6..5.....5.86...3...7.4..\r\n23.8....7...1..8..7...4.2........4...549..........73.6..7.5.....1..8...2....24.1.\r\n.....61....91...3......32...7...54....49.....8...17.5..273..6.4..3...5.2..87.....\r\n2..8..1....9....3..8...3.6.1....549....96....8...1...6.........413...5..5.8.24...\r\n.3.89.1..6....2..57.........7..3....3...6..2...24..3.6.....1..4......5..56....9.3\r\n.3..9.14.6........7.15...6....23............18..4...5..2.......4..6...7......4913\r\n..12.....2...439.58.......439.....81.1...7....24.........3.4.7.9..12.4........2.3\r\n.31.5..67..7...91.......3....546...16...3..42.........5........9..1....8....8.29.\r\n.31....6....8.....8.9.7....3..4.2..1.....7.4.72.5......82.9.....7...6..8.....5.9.\r\n.3......7.....3.....96....4....62..1.1......2...5.86..58.39..7.......45.1.6.8...3\r\n.312............1.....7......5462.........54.72.5...3.5...9.176.....64.....78....\r\n1...3...86.....7.......7.1.5...7.4...9..4..2...1..96.....7.5.93.5.3.....9.8.2....\r\n.....425.6..........38..9......7.4..89.......3.12.96....4..5..3.5.....4.9....1...\r\n..9.3...8....1...4.....791.....7.489.....6...3.1..9..5214...8..75.........84..5..\r\n1.96....86.5.1.......8.7......17..8.....4.3..3..2..6....4....93.5..9..........56.\r\n.......5..8..1.........7..65..1.348...75..3.......9....1....89...63..1.29.......7\r\n..82..5..51...8..73..1.....2..9...8.......6.......71.4...5..83...38..2....6.9....\r\n..8.3.......6....7..2.7.9....1...7.....4...5..853...947...1..36.5..6.2.....7.....\r\n..8.3.5...1.64.3...6....9...41.5...39.7..1..26......9.....1........6..7....7...15\r\n4..2....1.19.4.3...6.1..9..2..9.....937.8.65..8...7....9....8.....86.........3...\r\n.....95.1...64...7....7.9.8.4.......9.7..1.52....2......4.......53....7...6.93..5\r\n71............4..7...95..3.8...3...4.......5195.1..3..1.35..26..6...34...........\r\n7......4..9..1....48.9.......1.3.....3...2..1..4..8..6..35........7..419.......73\r\n.12..6.4....2.....48..5....8.....7.......285.9..1....6.7.5...6.......4.9.4.8.1..3\r\n.1....9.......46.7.8..5............46..492..1.5..7..2.1.3.49...5....3.1.2..8.....\r\n...38.94...5..4..7..6.......2.6......3.49...1....78....73....6.......41...9.6...3\r\n..149......5.3.89.8....1...2.....67.....4.2...63..7..4.8...5..7....1.9...1....4.3\r\n...49...2...2.....8....13......5.67...7......96.....1.38..6.....263.4.8.5....2.6.\r\n6..4..7....5.36......5...4.24....6.9.57..9.......27...384.............8...9..2..3\r\n63.....52..5...8....2..1.4.2...5.6......4..3....8.7.....4.6.12.......98.5..78....\r\n....9..5..7...6....92.7.....4.1.3.........2....3.27......9.5..772.3...85.19.....3\r\n81......3...3..6.........5..9..7....1.3.5.9.6.......8..2.73...84.52....1.3.19....\r\n....4.72..5938.6.4...........4..6...1834.......2.........7.45.8....6..9..38.9.2..\r\n.16....2...9..7.1...76.1......8........4..9.67....3..5.2.......4.......1.3..95..7\r\n....4...3.5..8.6.4..7.21...5....6...18..529....2......92..3.5...........6381..2..\r\n..65......5..87..4................3.1......76..2.1.4.59.17.4...4..2..3...3...5..7\r\n.7..8.9.4.4...27.1..3......7....3....1..7.5...5.........6.47..8...6..4..9...5....\r\n27.38.....4.............2.5..8...1..4.98..........1.765..1.73......3...2..4.58...\r\n...3.596.8.....7.1.....4...7.8.23....198..5.3.5.4.....5.6..73.8.8...............7\r\n........48..9..7...9.7..2.57.8.23.....9......3....1..65...........6.94.2.....86..\r\n.713..96..4...2.3......4......5.31....9.7.5..3..........61.7..8......4....4..8.17\r\n....7..2..46....1...8.....9.....6...1..4......9.815.....7..4.35...9...7.5..2..64.\r\n.......2.3.6.9.7..2.8...3......26......4..5.7.9...........6..3..1....8..53...76.1\r\n..1.7.4..3..5....8...6...59...7.....1..4.9....9...52..82...4.356....38....9.....1\r\n.51..8....4...2......641......7...9..62.......938..26.8....4..5...9..8....9.....1\r\n..137..2....5.........4.3.9.....6.....2....877.3.1......71..9..6.4....7.5.....6.1\r\n.84967............6.5.2.....7...82..93..4......1.....7...6...85....9.....4...5.7.\r\n.8..6...27.9..........2....4..1...3...2...8...5.......1..6..48.567.9.........5.7.\r\n3..9....2..9....6...5..3..847..58.........8...51......1..67..8.........3.4.3.59.6\r\n.8...7...7.9.....46..4.3.9...61.8....3....85...12..........24.5..7.9.........5..6\r\n...9.....7..58....6154......76.5....9.2..6..1.......4......248.......1.32.8....7.\r\n..29.....1.4....295.......8.....3....3..26.7.....1.3.....17...59...4....8..5...12\r\n...9..16...4.87.....3.......1..9.2.44.5.....1.......8..2..78.9.9..64..37.........\r\n7...5...3.6.3.7..95....1......7...5..3..2....2.94.5.....6...4.......2.37....39.1.\r\n.....4.....4.87..95.32......18...2..4.......1..9....8..2.....9..51.4...7...53.6..\r\n.....4.63.6.....2.5.....7.8.18..32...3...6..1....15.....6..8...9...4..3.8.7....1.\r\n....5.9.25.3........6.918.3.5.....9.38..2.............6....3.2..196..7.....4..1..\r\n.7..5.9.2.......1..26...8...5.86.....8...9.7...4..7..56.....5.....6.5..48..4....9\r\n....56.....3..8.17...7..8.3..2.......8..2.47.9....72...4.9.35...1..8...4.........\r\n1..3....2.....8....2...1.5...2....9.3..5..47..........64.9....8.1..8...4..547.1..\r\n.7.......5...48.....6.9...3......3.13.15..4.......7....47...5.8..96.....8.5...1..\r\n.8..........9.1....75..2..9.....9..2..1..897....51...32.97.5.....3...2..76..4....\r\n9...5.7...2....658...8.........39..2..1.2..76...51..........3....3..62..76...3.9.\r\n....5.7.1..497.........2....4.63.....31..89..69...7..........64....9.2...682....5\r\n..63..7....4..1....7....4.98..6...1.5.1...........7..32.....3.4...196.8.....4....\r\n9.63...2.3...7...8.7....4..8....9.....1.289....2....4..1.785.6....1....7.6.......\r\n.9..41..2....5.9.7.2.......6.5.8.2....2..681..38.......6...2........7..4.4..9..3.\r\n...6.1..........6732.9....1...7..2.347....8.9..8.......634..5...5...7........5.3.\r\n...64..8.18.2....73....8.516.......3.72.........1.....7.34..5....9.6.12.....9....\r\n..7...3...84...9.......8..1..5..9........681..3..24..5........8..9.6....2...9.73.\r\n.9...1...18.......3....845.......2...7.5.68.9....2.6..7......9.8...67...2..89..3.\r\n....3.5...4.8...129.25.....6....9....58.7.1....93...8........98...4...6...1...7..\r\n..6....47...8...129....1.......8.....58674.......256....5...4...9.4.3261...2....3\r\n........75..86...2....41.3.6......753.........1.32...4..57....8.974......6..9....\r\n..6.3....5....7.12......8......893......7..2..1...5..42.....49.897.5...........53\r\n1.6.....7.....79......4.8....4..93..3.....12.....2..8423..1.....9.....6.......75.\r\n9.5.........8..39.4...3.2..1...47....7.2.89........8.17......2...3....568.....7..\r\n....7.68..21......48........9....5.2..6.............7175..63.2...3..9...8....1.39\r\n.............5.3..4.793.2...98..7.....6...943........1.5......82..7.945......1...\r\n9....2.84....54....87....151...........218....4.6.58..7...6....2.3.......6....7.9\r\n...........1.5..9....936..5.9...7.6.57...8..3..2...8..7.9..3.2.........6.64.2..39\r\n..53..1.....5....81.6.2.79.......5.7.4....8.....416.292........4...59....5.7.....\r\n.2......4.9..612.8.........9..2....7...9.5.1...8.1......764.9...83.......5.7..4..\r\n.25...16.......2.......4.95.6.2.3.4....9.5....7..1..........9.348...9...65.......\r\n..5...16..9..61..........95.6.2.3..73...7..1....41..2921..4....4...5...2..9..2...\r\n...39...4..4.6...8.3.8..7..9.1............81.5......29...64.....8.15.6.2.59......\r\n..8..5....3..2.....76.41..3....1.5.....8.7..96....2...1.9..3.2...3....465........\r\n.....5..4......6..2.69..........45...5.86...9.41..2.8.1.9....2..8.....4.5......38\r\n9.86.5......7...91.7..4..5.8......6.......4.....592........37...8....14..24.7..3.\r\n......2.44357........9..85....31...2.......1.6.1........9.8......32..1...2..76.38\r\n......27...5...6.1...94......7...56...28..4......9.38..6.4.3...7.3.5.........6...\r\n.1.9.......5......2.3...9...6..8....1..7.98.....14..5.95.....4.8..2..7.9......12.\r\n618..45........61.2.......4..7...4...2.7..8..3.91....79..6..3...4.2...6..3..9...5\r\n....2.5.34...7..1.........4....8...11....98.6..9.......5.6..3..8....57..7364.....\r\n.1..245.......36.2.7....9.......2.....4....3...91.62....2....4.......7.973...8...\r\n61.9....3....7...2...56..8...7......1...5..3..8..4..5...26.7....4.....69.3.......\r\n..8.....6...1.6...5..2...1..5..2.7.9..3..18.5.9...7...2..96.4........2..4..5..1..\r\n128.4.............5.6.....4....2..497.36....5.....7...2....8.....571...84..5...6.\r\n..8..5.....4.7..82...2...........7...43.91.2...2...6.1.17..84..3.5..4.......3.16.\r\n12....97..3...............4.5.8.......36....5.....76.1..7..........1429.4...32.6.\r\n.28..5.76..4.76.8...6.8.3.4....23....4....8.5...4...3...796....3....4....8......7\r\n...6..7........218.783....4.17.2..4..4.7.3....3.1.6....83.....1..5...9.......5.26\r\n.5..8..3.....972....8....6............6.53.9.2..1.6.......6.4....5..198.4..87...6\r\n15.68.........7...9....2..4...........675...22.9...8.......94.162.4...87..1.....6\r\n...68..39......2.8.7...2.6.5..9.......6..3...2...4.875.8.....51..5..........7.3..\r\n.5.....3936...7.18....1......792.6.3...........9..68..7..2..4.16...3.........5.2.\r\n1..524...4....8..2........6..8.1...4.5....6...2..46..7....5.7....6..73..2.74..8..\r\n..3.2......5...1...82.39.5.......2.....8......21...5.7..9..37.1.1..8..49...4.....\r\n1..5.4..84..........2.39.5.67......4.....2...3.1.4......9.5..21..6..7.........86.\r\n1..5.4.......681...82.......783...9...48......2..46..7..9.53.2.........923...1..5\r\n......9..4...6.132.8..3..5.6..3...9............1...5.7.4....7.15....7....37.9..6.\r\n5...9..3...17...4..2...4.........4.8.....6..23.6.....9..75........68.......4..876\r\n5.....63.9.17......2.......1..........8...3....6...759.6..3...4.....7...2...19.76\r\n..4298...........5.2.....8..9.37.....5.....12.46...7..8.75..1.......7......4.9...\r\n57..9...........45.....498.1..37...8...9...1.3...2...98..5..........7..32.5.1..7.\r\n5.4..8..1..1....4...3.5.9...9.....68.5.94.........17..8..5........6..52..3..19...\r\n.....82....9......18...3...7.4..1..3...6....4258...........6.3...58...41.2.14...8\r\n...47..1...9...3.......3.75....2.89.9.3..7....5.3.4.....1.5.9.2..5.....1.2....6..\r\n..6..82.....2.....1....3.7......1.9.....8.5.4.5.39.1.......6.3..9...2...3.7.....8\r\n.3...821.4.9...3...8.9..4.5....21..3...6..5.........67..17....2..58.2.......4.6..\r\n..6..82........38.1.2........4.21.........5..2..394....4.75........3..413....9...\r\n.7.1........2......519.4...9......7..4...62.....3956.....4....32.7...1..6.......2\r\n.....8....6.25...73.1.....6...84.3...........72..9.64..........2..6.9.5.69.53...2\r\n.72.6.5......534.......4.2.91..........7..2........6.1..54...63.376.9.........7..\r\n`;\r\nconst list_easy = `\r\n/* Naked pair */\r\n...5.316.....1.2.7....7..5.7......35.532......1.4........9824..4.9...........1...\r\n\r\n/* Naked pair */\r\n..1......5..4.6..87.8.5.3...75..2..6.6...41..1..3...8.............6...53......91.\r\n\r\n/* Naked triple */\r\n..3...1.....4.6.7...5......2...3..65.7.5......9.6.8.3.........9...7.3...4...8...1\r\n\r\n/* Naked triple */\r\n..16..4....94....83.85....6.....28..7.5.....3......5.....8...3......5.......7..29\r\n\r\n/* Naked triple */\r\n..21.973.7......6..1..35.....8...15....5..329.4......7..9..12.....32....8........\r\n\r\n/* Naked triple twice */\r\n.8..7219...9...4...7..4.......157.....4............98.....2....59...43..71..96..5\r\n\r\n/* Naked triple twice */\r\n..5.72...6..5...78.....8.6.9...5.23...4............9.1.4.........681...7.12..6...\r\n\r\n/* X-wing */\r\n.8.......6..5.1...37.9.85......5.23.1.4...7......639.1...............32771...68..\r\n\r\n`;\r\nbatchAdd(list_unknown, (i) => `Untested one generated by me, #${i}`);\r\nbatchAdd(list_easy, (i) => `Not easy one generated by me, #${i}`);\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/database.ts?");

/***/ }),

/***/ "./source/index.ts":
/*!*************************!*\
  !*** ./source/index.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__webpack_require__(/*! ./math/math */ \"./source/math/math.ts\");\r\nconst so_graph_1 = __webpack_require__(/*! ./so_graph */ \"./source/so_graph.ts\");\r\nconst io_1 = __webpack_require__(/*! ./basic/io */ \"./source/basic/io.ts\");\r\nconst database_1 = __webpack_require__(/*! ./database */ \"./source/database.ts\");\r\nconst memento_1 = __webpack_require__(/*! ./system/memento */ \"./source/system/memento.ts\");\r\nconst so_solver_1 = __webpack_require__(/*! ./so_solver */ \"./source/so_solver.ts\");\r\n__webpack_require__(/*! ./so_strats/strats */ \"./source/so_strats/strats.ts\");\r\nconsole.log(`Sudoku Solver build 009`);\r\nconst div_log = document.getElementById('logs');\r\nconst div_puzzle = document.getElementById('puzzle');\r\nconst Game = new so_graph_1.SOPuzzle(3);\r\nconst Editor = new so_solver_1.SOSolver(Game);\r\nEditor.canvas.addTo(div_puzzle);\r\nconst History = new memento_1.Caretaker(Editor);\r\nconst LogConsole = {\r\n    log(msg, attr = {}) {\r\n        const dom_line = document.createElement('div');\r\n        for (const key in attr) {\r\n            dom_line.setAttribute(key, attr[key]);\r\n        }\r\n        dom_line.innerHTML = msg;\r\n        div_log.appendChild(dom_line);\r\n    },\r\n    clear() {\r\n        div_log.replaceChildren();\r\n    },\r\n};\r\nEditor.printLogs = (log_list, time) => {\r\n    let has_log = false;\r\n    for (let i = div_log.children.length - 1; i >= 0; i--) {\r\n        const e = div_log.children[i];\r\n        const t = Number.parseInt(e.getAttribute('time') || '99999');\r\n        if (t > time) {\r\n            div_log.removeChild(e);\r\n        }\r\n        else if (t == time) {\r\n            has_log = true;\r\n        }\r\n    }\r\n    if (!has_log) {\r\n        for (const log of log_list) {\r\n            const attr = {\r\n                time: time.toString()\r\n            };\r\n            const match_title_lv1 = log.match(/^title novice \"(.*)\"$/);\r\n            const match_title_lv2 = log.match(/^title apprentice \"(.*)\"$/);\r\n            const match_title_lv3 = log.match(/^title expert \"(.*)\"$/);\r\n            const match_log = log.match(/log \"(.*)\"/);\r\n            if (match_title_lv1) {\r\n                attr['style'] = 'font-weight: bold; background-color: #E0E0E0;';\r\n                LogConsole.log(match_title_lv1[1], attr);\r\n            }\r\n            else if (match_title_lv2) {\r\n                attr['style'] = 'font-weight: bold; background-color: #F0E68C;';\r\n                LogConsole.log(match_title_lv2[1], attr);\r\n            }\r\n            else if (match_title_lv3) {\r\n                attr['style'] = 'font-weight: bold; background-color: #6495ED; color: white;';\r\n                LogConsole.log(match_title_lv3[1], attr);\r\n            }\r\n            else if (match_log) {\r\n                LogConsole.log(match_log[1], attr);\r\n            }\r\n        }\r\n    }\r\n};\r\nvar TestRun;\r\n(function (TestRun) {\r\n    var _a, _b, _c, _d, _e, _f;\r\n    const loadPuzzle = (input, format = 'base64') => {\r\n        const v_ids = io_1.SOGameIO.import(Game, input, format);\r\n        const pz = new so_graph_1.SOPuzzle(Game.p, v_ids);\r\n        const v_id_clues = Set.union(...pz.adE['rc']\r\n            .filter((e) => (e.$['v'].size == 1))\r\n            .map((e) => e.$['v'].map((v) => v.id)));\r\n        Editor.snapshot.vertices = v_ids;\r\n        Editor.snapshot.clues = v_id_clues;\r\n        Editor.snapshot.determined = v_id_clues;\r\n        Editor.snapshot.pencilmarked = new Set();\r\n        Editor.snapshot.annotations = [];\r\n        History.init(new memento_1.Memento('initial|final', {\r\n            snapshot: Editor.snapshot,\r\n            logs: ['Puzzle loaded.'],\r\n            selected: -1\r\n        }));\r\n        Editor.render();\r\n    };\r\n    const strategy_list = [\r\n        Editor.obviousCandidateRemoval,\r\n        Editor.nakedSingle,\r\n        Editor.hiddenSingle,\r\n        Editor.intersectionPointing,\r\n        Editor.intersectionClaiming,\r\n        Editor.nakedSubsetGenerator(2),\r\n        Editor.nakedSubsetGenerator(3),\r\n        Editor.hiddenSubsetGenerator(2),\r\n        Editor.nakedSubsetGenerator(4),\r\n        Editor.hiddenSubsetGenerator(3),\r\n        Editor.hiddenSubsetGenerator(4),\r\n        Editor.fishGenerator(2),\r\n        Editor.fishGenerator(3),\r\n        Editor.fishGenerator(4),\r\n        Editor.frankenFishGenerator(2),\r\n        Editor.frankenFishGenerator(3),\r\n        Editor.frankenFishGenerator(4),\r\n        Editor.AICGenerator('X-cycle', ['rk', 'ck', 'bk'], ['rk', 'ck', 'bk'], 20),\r\n        Editor.AICGenerator('XY-chain', ['rc'], ['rk', 'ck', 'bk'], 20),\r\n        Editor.AICGenerator('Alternating Inference Chain', ['rc', 'rk', 'ck', 'bk'], ['rc', 'rk', 'ck', 'bk'], 20),\r\n    ];\r\n    const solve_prev = () => {\r\n        History.moveBy(-1);\r\n    };\r\n    const solve_next = () => {\r\n        console.time('benchmark');\r\n        if (History.atEnd()) {\r\n            const v_ids = Editor.snapshot.vertices;\r\n            const pz = new so_graph_1.SOPuzzle(Game.p, v_ids);\r\n            let is_updated = false;\r\n            for (const strategy of strategy_list) {\r\n                const pmem_seg = strategy.call(Editor, pz);\r\n                if (pmem_seg.length == 0) {\r\n                    continue;\r\n                }\r\n                History.addSegment(pmem_seg);\r\n                is_updated = true;\r\n                break;\r\n            }\r\n            if (!is_updated) {\r\n                LogConsole.log(`Cannot proceed further.`, { style: `background-color: red; color: white; font-weight: bold;` });\r\n                autoSolverStatus.isActive = true;\r\n                auto_solve();\r\n            }\r\n        }\r\n        History.moveBy(1);\r\n        console.timeEnd('benchmark');\r\n    };\r\n    const export_puzzle = () => {\r\n        const vset = History.now().snapshot.vertices;\r\n        LogConsole.clear();\r\n        LogConsole.log(`simple: ${io_1.SOGameIO.export(Game, vset, 'simple')}`);\r\n        LogConsole.log(`base64: ${io_1.SOGameIO.export(Game, vset)}`);\r\n        navigator.clipboard.writeText(`data:image/svg+xml;base64,${btoa(Editor.canvas.element.outerHTML)}`);\r\n    };\r\n    const samples = document.getElementById('samples');\r\n    for (const [index, item] of database_1.database.entries()) {\r\n        const option = document.createElement('option');\r\n        option.value = index.toString();\r\n        option.innerText = (_a = item.desc) !== null && _a !== void 0 ? _a : `Sample #${index + 1}`;\r\n        option.selected = index == 0;\r\n        samples.appendChild(option);\r\n    }\r\n    const import_sample = () => {\r\n        LogConsole.clear();\r\n        if (samples.selectedIndex >= 0) {\r\n            const item = database_1.database[samples.selectedIndex];\r\n            loadPuzzle(item.data, item.format);\r\n        }\r\n        else {\r\n            LogConsole.log(`No puzzle is selected.`);\r\n        }\r\n    };\r\n    import_sample();\r\n    const apply_cmd = () => {\r\n        var _a, _b;\r\n        const cmd_field = document.getElementById('cmd');\r\n        const cmd = cmd_field.value;\r\n        (_b = (_a = History.now()) === null || _a === void 0 ? void 0 : _a.snapshot.annotations) === null || _b === void 0 ? void 0 : _b.push(cmd);\r\n        Editor.load(History.now(), History.time);\r\n        cmd_field.value = \"\";\r\n    };\r\n    const autoSolverStatus = {\r\n        isActive: false,\r\n        handle: -1,\r\n        button: document.getElementById('auto')\r\n    };\r\n    const auto_solve = () => {\r\n        if (autoSolverStatus.isActive) {\r\n            autoSolverStatus.isActive = false;\r\n            clearInterval(autoSolverStatus.handle);\r\n            autoSolverStatus.button.innerHTML = 'Auto';\r\n        }\r\n        else {\r\n            autoSolverStatus.isActive = true;\r\n            autoSolverStatus.handle = setInterval(solve_next, 25);\r\n            autoSolverStatus.button.innerHTML = 'Stop';\r\n        }\r\n    };\r\n    (_b = document.getElementById('prev')) === null || _b === void 0 ? void 0 : _b.addEventListener('click', solve_prev);\r\n    (_c = document.getElementById('next')) === null || _c === void 0 ? void 0 : _c.addEventListener('click', solve_next);\r\n    (_d = document.getElementById('export')) === null || _d === void 0 ? void 0 : _d.addEventListener('click', export_puzzle);\r\n    samples.addEventListener('change', import_sample);\r\n    (_e = document.getElementById('import')) === null || _e === void 0 ? void 0 : _e.addEventListener('click', import_sample);\r\n    (_f = document.getElementById('apply_cmd')) === null || _f === void 0 ? void 0 : _f.addEventListener('click', apply_cmd);\r\n    autoSolverStatus.button.addEventListener('click', auto_solve);\r\n})(TestRun || (TestRun = {}));\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/index.ts?");

/***/ }),

/***/ "./source/math/map.ts":
/*!****************************!*\
  !*** ./source/math/map.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nfunction map_merge(x, y) {\r\n    const result = new Map(x);\r\n    for (const [a, b] of x.entries()) {\r\n        result.set(a, b);\r\n    }\r\n    for (const [a, b2] of y.entries()) {\r\n        if (result.has(a)) {\r\n            const b1 = result.get(a);\r\n            if (b2 instanceof (Set) && b1 instanceof (Set)) {\r\n                result.set(a, Set.union(b1, b2));\r\n            }\r\n            else if (b2 instanceof (Map) && b1 instanceof (Map)) {\r\n                result.set(a, map_merge(b1, b2));\r\n            }\r\n            else {\r\n                result.set(a, b2);\r\n            }\r\n        }\r\n        else {\r\n            result.set(a, b2);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nObject.defineProperty(Map, 'merge', {\r\n    value: map_merge,\r\n    enumerable: false\r\n});\r\nconst map_filter = function (test) {\r\n    const result = new Map();\r\n    for (const [key, value] of this) {\r\n        if (test(key, value, this)) {\r\n            result.set(key, value);\r\n        }\r\n    }\r\n    return result;\r\n};\r\nconst map_map = function (transform) {\r\n    const result = new Map();\r\n    for (const [key, value] of this) {\r\n        result.set(key, transform(key, value, this));\r\n    }\r\n    return result;\r\n};\r\nconst map_clear_empty_keys = function () {\r\n    const result = new Map();\r\n    for (const [key, value] of this) {\r\n        if (typeof value == 'undefined') {\r\n            continue;\r\n        }\r\n        else if (value instanceof Set && value.size == 0) {\r\n            continue;\r\n        }\r\n        else if (value instanceof Map && value.size == 0) {\r\n            continue;\r\n        }\r\n        result.set(key, value);\r\n    }\r\n    return result;\r\n};\r\nObject.defineProperty(Map.prototype, 'filter', {\r\n    value: map_filter,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Map.prototype, 'map', {\r\n    value: map_map,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Map.prototype, 'clearEmptyKeys', {\r\n    value: map_clear_empty_keys,\r\n    enumerable: false\r\n});\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/math/map.ts?");

/***/ }),

/***/ "./source/math/math.ts":
/*!*****************************!*\
  !*** ./source/math/math.ts ***!
  \*****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./set */ \"./source/math/set.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./map */ \"./source/math/map.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./multiset */ \"./source/math/multiset.ts\"), exports);\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/math/math.ts?");

/***/ }),

/***/ "./source/math/multiset.ts":
/*!*********************************!*\
  !*** ./source/math/multiset.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MSet = void 0;\r\nconst tools_1 = __webpack_require__(/*! ../basic/tools */ \"./source/basic/tools.ts\");\r\nclass MSet extends Map {\r\n    constructor(e_iter) {\r\n        super();\r\n        if (e_iter instanceof (MSet)) {\r\n            for (const [e, multi] of e_iter) {\r\n                this.set(e, multi);\r\n            }\r\n        }\r\n        else if (e_iter) {\r\n            for (const e of e_iter) {\r\n                this.add(e);\r\n            }\r\n        }\r\n    }\r\n    get count() {\r\n        return Array.from(this.values()).reduce((s, x) => s + x, 0);\r\n    }\r\n    sum(eset) {\r\n        return [...eset].reduce((s, e) => s + this.aget(e), 0);\r\n    }\r\n    aget(key) {\r\n        var _a;\r\n        return (_a = this.get(key)) !== null && _a !== void 0 ? _a : 0;\r\n    }\r\n    modify(e, multi_mod) {\r\n        var _a;\r\n        const multi = ((_a = this.get(e)) !== null && _a !== void 0 ? _a : 0) + multi_mod;\r\n        if (multi == 0) {\r\n            this.delete(e);\r\n        }\r\n        else {\r\n            this.set(e, multi);\r\n        }\r\n        return this;\r\n    }\r\n    trim() {\r\n        for (const [e, multi] of this) {\r\n            if (multi == 0) {\r\n                this.delete(e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    add(e) {\r\n        return this.modify(e, 1);\r\n    }\r\n    remove(e) {\r\n        return this.modify(e, -1);\r\n    }\r\n    elements() {\r\n        return this.keys();\r\n    }\r\n    every(callback) {\r\n        for (const [e, multi] of this) {\r\n            if (!callback(e, multi, this)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    some(callback) {\r\n        for (const [e, multi] of this) {\r\n            if (callback(e, multi, this)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    static shallowMSet(mset) {\r\n        return (mset instanceof (MSet)) ? mset : new MSet(mset);\r\n    }\r\n    static geqZero(cur_mset) {\r\n        for (const [_, multi] of cur_mset) {\r\n            if (multi < 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    static geq(mset_a, mset_b) {\r\n        for (const [e_a, multi_a] of mset_a) {\r\n            if (multi_a < mset_b.aget(e_a)) {\r\n                return false;\r\n            }\r\n        }\r\n        for (const [e_b, multi_b] of mset_b) {\r\n            if (multi_b > mset_a.aget(e_b)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    static add(...msets) {\r\n        if (msets.length == 0) {\r\n            return new MSet();\r\n        }\r\n        const result = new MSet(msets[0]);\r\n        for (const i of (0, tools_1.range)(1, msets.length)) {\r\n            for (const [e, multi] of MSet.shallowMSet(msets[i])) {\r\n                result.set(e, result.aget(e) + multi);\r\n            }\r\n        }\r\n        return result.trim();\r\n    }\r\n    static subtract(mset_a, mset_b) {\r\n        const result = new MSet(mset_a);\r\n        for (const [e, multi] of MSet.shallowMSet(mset_b)) {\r\n            result.set(e, result.aget(e) - multi);\r\n        }\r\n        return result.trim();\r\n    }\r\n    pick(def_value) {\r\n        for (const e of this.keys()) {\r\n            return e;\r\n        }\r\n        return def_value;\r\n    }\r\n}\r\nexports.MSet = MSet;\r\n;\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/math/multiset.ts?");

/***/ }),

/***/ "./source/math/set.ts":
/*!****************************!*\
  !*** ./source/math/set.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst tools_1 = __webpack_require__(/*! ../basic/tools */ \"./source/basic/tools.ts\");\r\nconst set_union = function (...sets) {\r\n    if (sets.length == 0) {\r\n        return new Set();\r\n    }\r\n    else if (sets.length == 1) {\r\n        return new Set(sets[0]);\r\n    }\r\n    else if (sets.length == 2) {\r\n        const [set_a, set_b] = (sets[0].size > sets[1].size) ? sets : sets.reverse();\r\n        const result = new Set(set_a);\r\n        for (const e of set_b) {\r\n            result.add(e);\r\n        }\r\n        return result;\r\n    }\r\n    else {\r\n        return set_union(set_union(...sets.slice(0, 2)), ...sets.slice(2));\r\n    }\r\n};\r\nconst set_intersection = function (...sets) {\r\n    if (sets.length == 0) {\r\n        throw RangeError(`Set intersection requires at least one set.`);\r\n    }\r\n    else if (sets.length == 1) {\r\n        return new Set(sets[0]);\r\n    }\r\n    else if (sets.length == 2) {\r\n        const [set_a, set_b] = (sets[0].size < sets[1].size) ? sets : sets.reverse();\r\n        const result = new Set(set_a);\r\n        for (const e of set_a) {\r\n            if (!set_b.has(e)) {\r\n                result.delete(e);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    else {\r\n        return set_intersection(set_intersection(...sets.slice(0, 2)), ...sets.slice(2));\r\n    }\r\n};\r\nconst set_difference = function (set_a, set_b) {\r\n    const result = new Set(set_a);\r\n    for (const e of set_b) {\r\n        result.delete(e);\r\n    }\r\n    return result;\r\n};\r\nObject.defineProperty(Set, 'union', {\r\n    value: set_union,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Set, 'intersection', {\r\n    value: set_intersection,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Set, 'diff', {\r\n    value: set_difference,\r\n    enumerable: false\r\n});\r\nconst set_filter = function (test) {\r\n    const result = new Set();\r\n    for (const e of this) {\r\n        if (test(e, this)) {\r\n            result.add(e);\r\n        }\r\n    }\r\n    return result;\r\n};\r\nconst set_map = function (transform) {\r\n    const result = new Set();\r\n    for (const e of this) {\r\n        result.add(transform(e, this));\r\n    }\r\n    return result;\r\n};\r\nconst set_subsets = function (size) {\r\n    const arr = [...this];\r\n    const iter = function* (i = 0, s = size, set_p = new Set()) {\r\n        if (s == 0) {\r\n            yield set_p;\r\n            return;\r\n        }\r\n        else if (s == (arr.length - i)) {\r\n            yield Set.union(set_p, new Set(arr.slice(i)));\r\n            return;\r\n        }\r\n        for (const j of (0, tools_1.range)(i, arr.length + 1 - s)) {\r\n            yield* iter(j + 1, s - 1, new Set(set_p).add(arr[j]));\r\n        }\r\n    };\r\n    return iter();\r\n};\r\nconst set_subsets_reduced = function* (size, reduce, init) {\r\n    const arr = [...this];\r\n    const iter = function* (i = 0, s = size, set_p = new Set(), red_p = init) {\r\n        if (s == 0) {\r\n            yield [set_p, red_p];\r\n            return;\r\n        }\r\n        else if (s == (arr.length - i)) {\r\n            const arr_tail = arr.slice(i);\r\n            yield [\r\n                Set.union(set_p, new Set(arr_tail)),\r\n                arr_tail.reduce(reduce, red_p)\r\n            ];\r\n            return;\r\n        }\r\n        for (const j of (0, tools_1.range)(i, arr.length + 1 - s)) {\r\n            const e = arr[j];\r\n            yield* iter(j + 1, s - 1, new Set(set_p).add(e), reduce(red_p, e));\r\n        }\r\n    };\r\n    return iter();\r\n};\r\nconst set_every = function (test) {\r\n    for (const e of this) {\r\n        if (!test(e, this)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\nconst set_some = function (test) {\r\n    for (const e of this) {\r\n        if (test(e, this)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nObject.defineProperty(Set.prototype, 'filter', {\r\n    value: set_filter,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Set.prototype, 'map', {\r\n    value: set_map,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Set.prototype, 'subsets', {\r\n    value: set_subsets,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Set.prototype, 'subsetsReduced', {\r\n    value: set_subsets_reduced,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Set.prototype, 'every', {\r\n    value: set_every,\r\n    enumerable: false\r\n});\r\nObject.defineProperty(Set.prototype, 'some', {\r\n    value: set_some,\r\n    enumerable: false\r\n});\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/math/set.ts?");

/***/ }),

/***/ "./source/so_graph.ts":
/*!****************************!*\
  !*** ./source/so_graph.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SOPuzzle = void 0;\r\n__webpack_require__(/*! ./math/math */ \"./source/math/math.ts\");\r\nconst tools_1 = __webpack_require__(/*! ./basic/tools */ \"./source/basic/tools.ts\");\r\nclass SOPuzzle {\r\n    constructor(p, v_id_set) {\r\n        this.isVertexID = (v_id) => {\r\n            return (Number.isInteger(v_id) && v_id >= 0 && v_id < this.D3);\r\n        };\r\n        this.isVertexIDSet = (v_ids) => {\r\n            return v_ids ? v_ids.every((v) => this.isVertexID(v)) : false;\r\n        };\r\n        if (!SOPuzzle.isDimParam(p)) {\r\n            throw RangeError(`'${p}' is not a valid dimensional parameter.`);\r\n        }\r\n        this.type = 'sudoku original';\r\n        this.p = p;\r\n        this.D1 = Math.pow(this.p, 2);\r\n        this.D2 = Math.pow(this.D1, 2);\r\n        this.D3 = Math.pow(this.D1, 3);\r\n        this.adV = [];\r\n        this.adE = { rc: [], rk: [], ck: [], bk: [] };\r\n        this.adF = { row: [], col: [], box: [], key: [] };\r\n        for (const [_, f_type, f_id] of this.__loopRawFaces()) {\r\n            this.adF[f_type][f_id] = {\r\n                type: f_type, id: f_id,\r\n                name: `${f_type}${f_id + 1}`,\r\n                $: {\r\n                    v: new Set(),\r\n                    rc: new Set(),\r\n                    rk: new Set(),\r\n                    ck: new Set(),\r\n                    bk: new Set()\r\n                }\r\n            };\r\n        }\r\n        for (const [_, e_type, e_id, f_type1, f_type2] of this.__loopRawEdges()) {\r\n            const [f_id1, f_id2] = tools_1.BaseN.toD(e_id, 2, this.D1);\r\n            const e = {\r\n                type: e_type, id: e_id, proj: this.adF[f_type1][f_id1],\r\n                name: `${e_type}${f_id1 + 1}${f_id2 + 1}`,\r\n                $: {\r\n                    v: new Set(),\r\n                    [f_type1]: this.adF[f_type1][f_id1],\r\n                    [f_type2]: this.adF[f_type2][f_id2],\r\n                    rc: new Set(),\r\n                    rk: new Set(),\r\n                    ck: new Set(),\r\n                    bk: new Set()\r\n                }\r\n            };\r\n            if (e_type == 'rc') {\r\n                e.proj = e;\r\n            }\r\n            ;\r\n            this.adE[e_type][e_id] = e;\r\n        }\r\n        v_id_set = v_id_set !== null && v_id_set !== void 0 ? v_id_set : new Set((0, tools_1.range)(this.D3));\r\n        for (const v_id of v_id_set) {\r\n            if (!this.isVertexID(v_id)) {\r\n                throw RangeError(`'${v_id}' is not a valid vertex ID.`);\r\n            }\r\n            const [row, col, key] = tools_1.BaseN.toD(v_id, 3, this.D1);\r\n            const d = tools_1.BaseN.toD(v_id, 6, this.p);\r\n            const box = tools_1.BaseN.fromD([d[0], d[2]], this.p);\r\n            const inn = tools_1.BaseN.fromD([d[1], d[3]], this.p);\r\n            const v = {\r\n                id: v_id,\r\n                name: `${key + 1}[${row + 1},${col + 1}]`,\r\n                $: {\r\n                    rc: this.adE.rc[tools_1.BaseN.fromD([row, col], this.D1)],\r\n                    rk: this.adE.rk[tools_1.BaseN.fromD([row, key], this.D1)],\r\n                    ck: this.adE.ck[tools_1.BaseN.fromD([col, key], this.D1)],\r\n                    bk: this.adE.bk[tools_1.BaseN.fromD([box, key], this.D1)],\r\n                    row: this.adF.row[row],\r\n                    col: this.adF.col[col],\r\n                    box: this.adF.box[box],\r\n                    key: this.adF.key[key],\r\n                }\r\n            };\r\n            this.adV[v_id] = v;\r\n            for (const e_type of SOPuzzle.edgeTypes) {\r\n                v.$[e_type].$['v'].add(v);\r\n                for (const e_type2 of SOPuzzle.edgeTypes) {\r\n                    v.$[e_type].$[e_type2].add(v.$[e_type2]);\r\n                }\r\n            }\r\n            for (const f_type of SOPuzzle.faceTypes) {\r\n                v.$[f_type].$['v'].add(v);\r\n                for (const e_type of SOPuzzle.edgeTypes) {\r\n                    v.$[f_type].$[e_type].add(v.$[e_type]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getVisibles(v) {\r\n        const v_visible = Set.union(v.$['rc'].$['v'], v.$['rk'].$['v'], v.$['ck'].$['v'], v.$['bk'].$['v']);\r\n        v_visible.delete(v);\r\n        return v_visible;\r\n    }\r\n    *__loopRawEdges() {\r\n        for (const [e_type, f_type1, f_type2] of SOPuzzle.edgeTypeTriples) {\r\n            for (const e_id of (0, tools_1.range)(this.D2)) {\r\n                yield [this.adE[e_type][e_id], e_type, e_id, f_type1, f_type2];\r\n            }\r\n        }\r\n    }\r\n    *__loopRawFaces() {\r\n        for (const f_type of SOPuzzle.faceTypes) {\r\n            for (const f_id of (0, tools_1.range)(this.D1)) {\r\n                yield [this.adF[f_type][f_id], f_type, f_id];\r\n            }\r\n        }\r\n    }\r\n    *loopEdges(e_types, v_ids) {\r\n        if (v_ids && !this.isVertexIDSet(v_ids)) {\r\n            throw RangeError(`The input is not a valid set of vertex IDs.`);\r\n        }\r\n        for (const e_type of e_types) {\r\n            if (v_ids) {\r\n                yield* v_ids.map((v) => this.adV[v].$[e_type]);\r\n            }\r\n            else {\r\n                yield* this.adE[e_type];\r\n            }\r\n        }\r\n    }\r\n    *loopFaceConfig(order, type_triples) {\r\n        for (const [f_type, e_type_s, e_type_w] of type_triples) {\r\n            for (const face of this.adF[f_type]) {\r\n                const eset_s = (typeof e_type_s == 'string')\r\n                    ? face.$[e_type_s]\r\n                    : Set.union(...e_type_s.map((t) => face.$[t]));\r\n                const eset_s_f = eset_s.filter((e) => e.$['v'].size > 1);\r\n                for (const eset_s_sub of eset_s_f.subsets(order)) {\r\n                    const vset_s = Set.union(...eset_s_sub.map((e) => e.$['v']));\r\n                    const eset_w = (typeof e_type_w == 'string')\r\n                        ? vset_s.map((v) => v.$[e_type_w])\r\n                        : Set.union(...e_type_w.map((t) => vset_s.map((v) => v.$[t])));\r\n                    if (eset_w.size > order) {\r\n                        continue;\r\n                    }\r\n                    const vset_w = Set.union(...eset_w.map((e) => e.$['v']));\r\n                    const vset_wonly = Set.diff(vset_w, vset_s);\r\n                    if (vset_wonly.size == 0) {\r\n                        continue;\r\n                    }\r\n                    yield {\r\n                        face: face,\r\n                        strongEdges: eset_s_sub,\r\n                        strongVertices: vset_s,\r\n                        weakEdges: eset_w,\r\n                        weakVertices: vset_w,\r\n                        weakOnlyVertices: vset_wonly\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.SOPuzzle = SOPuzzle;\r\nSOPuzzle.edgeTypes = ['rc', 'rk', 'ck', 'bk'];\r\nSOPuzzle.faceTypes = ['row', 'col', 'box', 'key'];\r\nSOPuzzle.edgeTypeTriples = [\r\n    ['rc', 'row', 'col'],\r\n    ['rk', 'row', 'key'],\r\n    ['ck', 'col', 'key'],\r\n    ['bk', 'box', 'key']\r\n];\r\nSOPuzzle.isDimParam = (p) => {\r\n    return (Number.isInteger(p) && p > 0 && p <= 8);\r\n};\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_graph.ts?");

/***/ }),

/***/ "./source/so_solver.ts":
/*!*****************************!*\
  !*** ./source/so_solver.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SOSolver = void 0;\r\n__webpack_require__(/*! ./math/math */ \"./source/math/math.ts\");\r\nconst memento_1 = __webpack_require__(/*! ./system/memento */ \"./source/system/memento.ts\");\r\nconst so_graph_1 = __webpack_require__(/*! ./so_graph */ \"./source/so_graph.ts\");\r\nconst canvas_1 = __webpack_require__(/*! ./system/canvas */ \"./source/system/canvas.ts\");\r\nclass SOSolver extends memento_1.Originator {\r\n    constructor(game, attr) {\r\n        super();\r\n        this.game = game;\r\n        this.canvas = new canvas_1.PuzzleCanvas(attr);\r\n        this.snapshot = {\r\n            vertices: new Set(),\r\n            clues: new Set(),\r\n            determined: new Set(),\r\n            pencilmarked: new Set(),\r\n            annotations: []\r\n        };\r\n        this.selected = -1;\r\n    }\r\n    load(mem, time) {\r\n        this.snapshot = mem.snapshot;\r\n        this.selected = mem.selected;\r\n        this.printLogs(mem.logs, time);\r\n        this.render();\r\n    }\r\n    printLogs(log_list, time) {\r\n        console.clear();\r\n        for (const log of log_list) {\r\n            console.log(log);\r\n        }\r\n    }\r\n    render() {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        const v_ids = this.snapshot.vertices;\r\n        const v_id_clues = this.snapshot.clues;\r\n        const v_id_dets = this.snapshot.determined;\r\n        const e_id_pms = this.snapshot.pencilmarked;\r\n        const grp_cmds = this.snapshot.annotations;\r\n        const pz = new so_graph_1.SOPuzzle(this.game.p, v_ids);\r\n        const svg = this.canvas;\r\n        const o = svg.style;\r\n        svg.cellRects.clearAll();\r\n        svg.cellTexts.hideAll().clearAll();\r\n        svg.markRects.hideAll().clearAll();\r\n        svg.markTexts.hideAll().clearAll();\r\n        svg.drawing.html('');\r\n        for (const edge of pz.loopEdges(['rc'])) {\r\n            const vset = edge.$['v'];\r\n            if (vset.size == 1) {\r\n                vset.forEach((v) => {\r\n                    if (v_id_clues.has(v.id)) {\r\n                        svg.cellTexts.show(edge.id)\r\n                            .html(`${o['mark-symbols'].charAt(v.id % 9)}`)\r\n                            .attr({ fill: 'blue' });\r\n                    }\r\n                    else if (v_id_dets.has(v.id)) {\r\n                        svg.cellTexts.show(edge.id)\r\n                            .html(`${o['mark-symbols'].charAt(v.id % 9)}`);\r\n                    }\r\n                    else {\r\n                        svg.markTexts.show(v.id);\r\n                    }\r\n                });\r\n            }\r\n            else if (vset.size == 0) {\r\n                svg.cellTexts.show(edge.id)\r\n                    .html('X')\r\n                    .attr({ fill: 'red' });\r\n            }\r\n            else if (e_id_pms.has(edge.id)) {\r\n                vset.forEach((v) => {\r\n                    svg.markTexts.show(v.id);\r\n                });\r\n            }\r\n        }\r\n        for (const cmd of grp_cmds) {\r\n            const match_hl = cmd.match(/^highlight (\\S+) ([\\d\\s,]+) as (.*)$/);\r\n            const match_uhl = cmd.match(/^unhighlight (\\S+) ([\\d\\s,]+)$/);\r\n            if (match_hl) {\r\n                const type = match_hl[1];\r\n                const id_list = match_hl[2].split(/[\\s,]+/).map((s) => Number.parseInt(s));\r\n                const class_name = match_hl[3];\r\n                for (const id of id_list) {\r\n                    if (type == 'mark') {\r\n                        (_a = svg.markRects.show(id)) === null || _a === void 0 ? void 0 : _a.attr(o[`rect:${class_name}`]);\r\n                        (_b = svg.markTexts.get(id)) === null || _b === void 0 ? void 0 : _b.attr(o[`text:${class_name}`]);\r\n                        if (class_name == 'removed') {\r\n                            const mark_elem = svg.markRects.get(id).element;\r\n                            const x = mark_elem.getAttribute('x');\r\n                            const y = mark_elem.getAttribute('y');\r\n                            const w = mark_elem.getAttribute('width');\r\n                            const h = mark_elem.getAttribute('height');\r\n                            svg.drawing\r\n                                .path({ 'd': `M ${x} ${y} l ${w} ${h} m -${w} 0 l ${w} -${h}` })\r\n                                .attr({ 'stroke': 'red' });\r\n                        }\r\n                    }\r\n                    else if (type == 'cell' || type == 'rc') {\r\n                        (_c = svg.cellRects.show(id)) === null || _c === void 0 ? void 0 : _c.attr(o[`rect:${class_name}`]);\r\n                        (_d = svg.cellTexts.get(id)) === null || _d === void 0 ? void 0 : _d.attr(o[`text:${class_name}`]);\r\n                    }\r\n                    else if (type == 'row' || type == 'col' || type == 'box') {\r\n                        for (const e_rc of pz.adF[type][id].$['rc']) {\r\n                            (_e = svg.cellRects.show(e_rc.id)) === null || _e === void 0 ? void 0 : _e.attr(o[`rect:${class_name}`]);\r\n                            (_f = svg.cellTexts.get(e_rc.id)) === null || _f === void 0 ? void 0 : _f.attr(o[`text:${class_name}`]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (match_uhl) {\r\n                const type = match_uhl[1];\r\n                const id_list = match_uhl[2].split(/[\\s,]+/).map((s) => Number.parseInt(s));\r\n                for (const id of id_list) {\r\n                    if (type == 'mark') {\r\n                        svg.markRects.clearStyle(id);\r\n                        svg.markRects.hide(id);\r\n                        svg.markTexts.clearStyle(id);\r\n                    }\r\n                    else if (type == 'cell' || type == 'rc') {\r\n                        svg.cellRects.clearStyle(id);\r\n                        svg.cellTexts.clearStyle(id);\r\n                    }\r\n                    else if (type == 'row' || type == 'col' || type == 'box') {\r\n                        for (const e_rc of pz.adF[type][id].$['rc']) {\r\n                            svg.cellRects.clearStyle(e_rc.id);\r\n                            svg.cellTexts.clearStyle(e_rc.id);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.SOSolver = SOSolver;\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_solver.ts?");

/***/ }),

/***/ "./source/so_strats/aic.ts":
/*!*********************************!*\
  !*** ./source/so_strats/aic.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AICExplore = exports.AICExpState = exports.AICTruth = exports.AICStrength = void 0;\r\nconst so_graph_1 = __webpack_require__(/*! ../so_graph */ \"./source/so_graph.ts\");\r\nconst so_solver_1 = __webpack_require__(/*! ../so_solver */ \"./source/so_solver.ts\");\r\nconst tools_1 = __webpack_require__(/*! ../basic/tools */ \"./source/basic/tools.ts\");\r\nconst multiset_1 = __webpack_require__(/*! ../math/multiset */ \"./source/math/multiset.ts\");\r\nso_solver_1.SOSolver.prototype.AICGenerator = function (name, s_dir, w_dir, max_depth) {\r\n    return (pz) => {\r\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\r\n        const v_ids = new Set(this.snapshot.vertices);\r\n        const grp_cmds = new Array();\r\n        const grp_cmds_rm = new Array();\r\n        const h_seg = [\r\n            {\r\n                type: 'initial',\r\n                logs: [`title expert \"${name}\"`],\r\n                snapshot: {\r\n                    annotations: grp_cmds\r\n                }\r\n            },\r\n            {\r\n                type: 'middle',\r\n                logs: [],\r\n                snapshot: {\r\n                    annotations: grp_cmds_rm\r\n                }\r\n            },\r\n            {\r\n                type: 'final',\r\n                logs: [],\r\n                snapshot: {\r\n                    vertices: v_ids,\r\n                    annotations: []\r\n                }\r\n            }\r\n        ];\r\n        for (const result of pz.loopAIC(s_dir, w_dir, max_depth)) {\r\n            const vlist = result.vertexChain;\r\n            const vlist_1 = vlist.filter((_, i) => ((i % 2) == 0));\r\n            const vlist_2 = vlist.filter((_, i) => ((i % 2) == 1));\r\n            grp_cmds.push(`highlight mark ${vlist_1.map((v) => v.id)} as intersect`);\r\n            grp_cmds.push(`highlight mark ${vlist_2.map((v) => v.id)} as based`);\r\n            if (result.rank == -1) {\r\n                (_a = h_seg[0].logs) === null || _a === void 0 ? void 0 : _a.push(`log \"A nice discontinuous loop of rank -1 and order ${result.strongEdges.size} has been found.\"`);\r\n                (_b = h_seg[0].logs) === null || _b === void 0 ? void 0 : _b.push(`log \"${vlist.map((v, i) => `${(i % 2) ? 'X' : ''}${v.name}`).join(' -- ')}\"`);\r\n                (_c = h_seg[0].logs) === null || _c === void 0 ? void 0 : _c.push(`log \"The discontinuity at ${result.conflictAt.name} is determed as true.\"`);\r\n                grp_cmds.push(`highlight mark ${result.conflictAt.id} as determined`);\r\n                grp_cmds_rm.push(`highlight mark ${result.conflictAt.id} as determined`);\r\n                for (const v_targ of pz.getVisibles(result.conflictAt)) {\r\n                    v_ids.delete(v_targ.id);\r\n                    (_d = h_seg[1].logs) === null || _d === void 0 ? void 0 : _d.push(`log \"${v_targ.name} can see the determined candidate.\"`);\r\n                    (_e = h_seg[2].logs) === null || _e === void 0 ? void 0 : _e.push(`log \"${v_targ.name} is erased.\"`);\r\n                    grp_cmds_rm.push(`highlight mark ${v_targ.id} as removed`);\r\n                }\r\n                return h_seg;\r\n            }\r\n            else if (result.rank == 0) {\r\n                vlist.pop();\r\n                (_f = h_seg[0].logs) === null || _f === void 0 ? void 0 : _f.push(`log \"A nice continuous loop of rank 0 and order ${result.strongEdges.size} has been found.\"`);\r\n                (_g = h_seg[0].logs) === null || _g === void 0 ? void 0 : _g.push(`log \"${vlist.map((v, i) => `${(i % 2) ? 'X' : ''}${v.name}`).join(' -- ')} -- cycle\"`);\r\n                grp_cmds_rm.push(`highlight mark ${vlist_1.map((v) => v.id)} as intersect`);\r\n                grp_cmds_rm.push(`highlight mark ${vlist_2.map((v) => v.id)} as based`);\r\n                for (const [v_targ, m] of result.weakOnlyVertices) {\r\n                    if (m <= result.rank) {\r\n                        continue;\r\n                    }\r\n                    v_ids.delete(v_targ.id);\r\n                    (_h = h_seg[1].logs) === null || _h === void 0 ? void 0 : _h.push(`log \"${v_targ.name} can see both colors of the loop.\"`);\r\n                    (_j = h_seg[2].logs) === null || _j === void 0 ? void 0 : _j.push(`log \"${v_targ.name} is erased.\"`);\r\n                    grp_cmds_rm.push(`highlight mark ${v_targ.id} as removed`);\r\n                }\r\n                return h_seg;\r\n            }\r\n            else if (result.rank == 1) {\r\n                vlist.pop();\r\n                vlist.shift();\r\n                (_k = h_seg[0].logs) === null || _k === void 0 ? void 0 : _k.push(`log \"A nice discontinuous loop of rank 1 and order ${result.strongEdges.size} has been found.\"`);\r\n                (_l = h_seg[0].logs) === null || _l === void 0 ? void 0 : _l.push(`log \"${vlist.map((v, i) => `${(i % 2) ? '' : 'X'}${v.name}`).join(' -- ')}\"`);\r\n                grp_cmds.push(`unhighlight mark ${result.conflictAt.id}`);\r\n                grp_cmds_rm.push(`highlight mark ${vlist_1.map((v) => v.id)} as intersect`);\r\n                grp_cmds_rm.push(`highlight mark ${vlist_2.map((v) => v.id)} as based`);\r\n                for (const v_targ of Set.intersection(pz.getVisibles(vlist[0]), pz.getVisibles(vlist[vlist.length - 1]))) {\r\n                    v_ids.delete(v_targ.id);\r\n                    (_m = h_seg[1].logs) === null || _m === void 0 ? void 0 : _m.push(`log \"${v_targ.name} can see both endpoints.\"`);\r\n                    (_o = h_seg[2].logs) === null || _o === void 0 ? void 0 : _o.push(`log \"${v_targ.name} is erased.\"`);\r\n                    grp_cmds_rm.push(`highlight mark ${v_targ.id} as removed`);\r\n                }\r\n                return h_seg;\r\n            }\r\n        }\r\n        return [];\r\n    };\r\n};\r\nvar AICStrength;\r\n(function (AICStrength) {\r\n    AICStrength[AICStrength[\"Weak\"] = 0] = \"Weak\";\r\n    AICStrength[AICStrength[\"Strong\"] = 1] = \"Strong\";\r\n    AICStrength[AICStrength[\"Any\"] = 2] = \"Any\";\r\n    AICStrength[AICStrength[\"Never\"] = 3] = \"Never\";\r\n})(AICStrength = exports.AICStrength || (exports.AICStrength = {}));\r\nvar AICTruth;\r\n(function (AICTruth) {\r\n    AICTruth[AICTruth[\"False\"] = 0] = \"False\";\r\n    AICTruth[AICTruth[\"True\"] = 1] = \"True\";\r\n    AICTruth[AICTruth[\"Any\"] = 2] = \"Any\";\r\n    AICTruth[AICTruth[\"Never\"] = 3] = \"Never\";\r\n})(AICTruth = exports.AICTruth || (exports.AICTruth = {}));\r\n;\r\nclass AICExpState {\r\n    constructor(v, dist, prev, last_edge, last_edge_str) {\r\n        this.vertex = v;\r\n        this.dist = dist !== null && dist !== void 0 ? dist : Infinity;\r\n        this.prev = prev !== null && prev !== void 0 ? prev : null;\r\n        this.lastEdge = last_edge !== null && last_edge !== void 0 ? last_edge : null;\r\n        this.lastEdgeStr = last_edge_str !== null && last_edge_str !== void 0 ? last_edge_str : AICStrength.Any;\r\n        this.initTruth = this.computeInitTruth();\r\n    }\r\n    computeInitTruth() {\r\n        switch (this.lastEdgeStr) {\r\n            case AICStrength.Weak:\r\n                return (this.dist % 2) ? AICTruth.True : AICTruth.False;\r\n            case AICStrength.Strong:\r\n                return (this.dist % 2) ? AICTruth.False : AICTruth.True;\r\n            case AICStrength.Any:\r\n                return AICTruth.Any;\r\n            case AICStrength.Never:\r\n                return AICTruth.Never;\r\n        }\r\n    }\r\n    get edgeHistory() {\r\n        let cur_state = this;\r\n        const result = [];\r\n        while (cur_state && cur_state.lastEdge) {\r\n            result.unshift(cur_state.lastEdge);\r\n            cur_state = cur_state.prev;\r\n        }\r\n        return result;\r\n    }\r\n    get vertexHistory() {\r\n        let cur_state = this;\r\n        const result = [];\r\n        while (cur_state) {\r\n            result.unshift(cur_state.vertex);\r\n            cur_state = cur_state.prev;\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.AICExpState = AICExpState;\r\nclass AICExplore {\r\n    constructor(v, s_dir, w_dir) {\r\n        this.root = new AICExpState(v, 0);\r\n        this.states = new Map([[v, this.root]]);\r\n        this.queue = [v];\r\n        this.sDir = s_dir;\r\n        this.wDir = w_dir;\r\n    }\r\n    *explore(max_dist) {\r\n        let loop_continue = true;\r\n        while (loop_continue) {\r\n            loop_continue = false;\r\n            for (const [i, cur_v] of this.queue.entries()) {\r\n                const cur_state = this.states.get(cur_v);\r\n                if (cur_state.dist >= max_dist) {\r\n                    continue;\r\n                }\r\n                this.queue.splice(i, 1);\r\n                yield* this.propagate(cur_state);\r\n                loop_continue = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    ;\r\n    *propagate(cur_state) {\r\n        var _a;\r\n        const cur_v = cur_state.vertex;\r\n        for (const t of so_graph_1.SOPuzzle.edgeTypes) {\r\n            const cur_e = cur_v.$[t];\r\n            const new_str = AICExplore.regardAs(cur_state.lastEdgeStr, (cur_e.$['v'].size == 2) ? AICStrength.Strong : AICStrength.Weak);\r\n            if (new_str == AICStrength.Never) {\r\n                continue;\r\n            }\r\n            if (new_str == AICStrength.Strong && this.sDir.indexOf(t) == -1) {\r\n                continue;\r\n            }\r\n            if (new_str == AICStrength.Weak && this.wDir.indexOf(t) == -1) {\r\n                continue;\r\n            }\r\n            for (const new_v of cur_e.$['v']) {\r\n                if (new_v == cur_v) {\r\n                    continue;\r\n                }\r\n                if (new_v == ((_a = cur_state.prev) === null || _a === void 0 ? void 0 : _a.vertex)) {\r\n                    continue;\r\n                }\r\n                const new_state = new AICExpState(new_v, cur_state.dist + 1, cur_state, cur_e, new_str);\r\n                const result = this.resolve(new_state);\r\n                if (result) {\r\n                    yield result;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    resolve(new_state) {\r\n        const old_state = this.states.get(new_state.vertex);\r\n        if (old_state) {\r\n            if (new_state.prev == old_state.prev) {\r\n                return;\r\n            }\r\n            else if (new_state.initTruth == old_state.initTruth) {\r\n                if (new_state.dist < old_state.dist) {\r\n                    this.states.set(new_state.vertex, new_state);\r\n                    this.queue.push(new_state.vertex);\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                const result = {\r\n                    rank: 0,\r\n                    conflictAt: new_state.vertex,\r\n                    strongEdges: new Set(),\r\n                    strongVertices: new multiset_1.MSet(),\r\n                    weakEdges: new Set(),\r\n                    weakVertices: new multiset_1.MSet(),\r\n                    weakOnlyVertices: new multiset_1.MSet(),\r\n                    vertexChain: new Array()\r\n                };\r\n                if (new_state.lastEdgeStr == old_state.lastEdgeStr) {\r\n                    result.rank = (new_state.lastEdgeStr == AICStrength.Strong) ? -1 : 1;\r\n                }\r\n                const cycle = [...new_state.edgeHistory.reverse(), ...old_state.edgeHistory];\r\n                const even_only = (_, i) => ((i % 2) == 0);\r\n                const odd_only = (_, i) => ((i % 2) == 1);\r\n                const is_se_first = new_state.lastEdgeStr == AICStrength.Strong;\r\n                result.strongEdges = new Set(cycle.filter(is_se_first ? even_only : odd_only));\r\n                result.weakEdges = new Set(cycle.filter(is_se_first ? odd_only : even_only));\r\n                result.strongVertices = multiset_1.MSet.add(...result.strongEdges.map((e) => e.$['v']));\r\n                result.weakVertices = multiset_1.MSet.add(...result.weakEdges.map((e) => e.$['v']));\r\n                result.weakOnlyVertices = multiset_1.MSet.subtract(result.weakVertices, result.strongVertices);\r\n                if (result.rank >= 0 && !result.weakOnlyVertices.some((_, m) => m > result.rank)) {\r\n                    return;\r\n                }\r\n                result.vertexChain = [...new_state.vertexHistory.reverse(), ...old_state.vertexHistory.slice(1)];\r\n                return result;\r\n            }\r\n        }\r\n        else {\r\n            this.states.set(new_state.vertex, new_state);\r\n            this.queue.push(new_state.vertex);\r\n        }\r\n    }\r\n    ;\r\n    static regardAs(type_prev, type_cur) {\r\n        switch (type_prev) {\r\n            case AICStrength.Strong:\r\n                return AICStrength.Weak;\r\n            case AICStrength.Weak:\r\n                switch (type_cur) {\r\n                    case AICStrength.Strong:\r\n                        return AICStrength.Strong;\r\n                    default:\r\n                        return AICStrength.Never;\r\n                }\r\n            case AICStrength.Any:\r\n                return type_cur;\r\n            case AICStrength.Never:\r\n                return AICStrength.Never;\r\n        }\r\n    }\r\n}\r\nexports.AICExplore = AICExplore;\r\nso_graph_1.SOPuzzle.prototype.loopAIC = function* (s_dir, w_dir, max_depth) {\r\n    const exp_hashmap = new Map();\r\n    for (const depth of (0, tools_1.range)(2, max_depth + 1)) {\r\n        for (const v of this.adV) {\r\n            if (!v) {\r\n                continue;\r\n            }\r\n            if (so_graph_1.SOPuzzle.edgeTypes.some((t) => v.$[t].$['v'].size == 1)) {\r\n                continue;\r\n            }\r\n            if (!exp_hashmap.has(v)) {\r\n                exp_hashmap.set(v, new AICExplore(v, s_dir, w_dir));\r\n            }\r\n            const explorer = exp_hashmap.get(v);\r\n            yield* explorer.explore(depth);\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_strats/aic.ts?");

/***/ }),

/***/ "./source/so_strats/fish.ts":
/*!**********************************!*\
  !*** ./source/so_strats/fish.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst so_solver_1 = __webpack_require__(/*! ../so_solver */ \"./source/so_solver.ts\");\r\nso_solver_1.SOSolver.prototype.fishGenerator = function (order) {\r\n    if (!Number.isInteger(order) || order < 2 || order > 4) {\r\n        throw RangeError(`Invalid range of parameter.`);\r\n    }\r\n    const subset_type = { [2]: 'X-wing', [3]: 'Swordfish', [4]: 'Jellyfish' }[order];\r\n    return (pz) => {\r\n        var _a, _b;\r\n        const v_ids = new Set(this.snapshot.vertices);\r\n        const grp_cmds = new Array();\r\n        const h_seg = [\r\n            {\r\n                type: 'initial',\r\n                logs: [`title apprentice \"${subset_type}\"`],\r\n                snapshot: {\r\n                    annotations: grp_cmds\r\n                }\r\n            },\r\n            {\r\n                type: 'final',\r\n                logs: [],\r\n                snapshot: {\r\n                    vertices: v_ids,\r\n                    annotations: []\r\n                }\r\n            }\r\n        ];\r\n        for (const found of pz.loopFaceConfig(order, [\r\n            ['key', 'rk', 'ck'],\r\n            ['key', 'ck', 'rk'],\r\n        ])) {\r\n            const face = found.face;\r\n            const eset_s = found.strongEdges;\r\n            const vset_s = found.strongVertices;\r\n            const eset_w = found.weakEdges;\r\n            const vset_wonly = found.weakOnlyVertices;\r\n            (_a = h_seg[0].logs) === null || _a === void 0 ? void 0 : _a.push(`log \"#key:${face.id} of #cell:${[...vset_s.map((v) => v.$['rc'].id)]} form a ${subset_type === null || subset_type === void 0 ? void 0 : subset_type.toLocaleLowerCase()}.\"`);\r\n            grp_cmds.push(`highlight mark ${[...vset_s.map((v) => v.id)]} as determined`);\r\n            eset_s.forEach((e) => { grp_cmds.push(`highlight ${e.proj.type} ${e.proj.id} as based`); });\r\n            eset_w.forEach((e) => { grp_cmds.push(`highlight ${e.proj.type} ${e.proj.id} as affected`); });\r\n            grp_cmds.push(`highlight cell ${[...vset_s.map((v) => v.$['rc'].id)]} as intersect`);\r\n            for (const v_targ of vset_wonly) {\r\n                v_ids.delete(v_targ.id);\r\n                (_b = h_seg[1].logs) === null || _b === void 0 ? void 0 : _b.push(`log \"#v:${v_targ.id} is erased.\"`);\r\n                grp_cmds.push(`highlight mark ${v_targ.id} as removed`);\r\n            }\r\n            return h_seg;\r\n        }\r\n        return [];\r\n    };\r\n};\r\nso_solver_1.SOSolver.prototype.frankenFishGenerator = function (order) {\r\n    if (!Number.isInteger(order) || order < 2 || order > 4) {\r\n        throw RangeError(`Invalid range of parameter.`);\r\n    }\r\n    const subset_type = { [2]: 'X-wing', [3]: 'Swordfish', [4]: 'Jellyfish' }[order];\r\n    return (pz) => {\r\n        var _a, _b;\r\n        const v_ids = new Set(this.snapshot.vertices);\r\n        const grp_cmds = new Array();\r\n        const h_seg = [\r\n            {\r\n                type: 'initial',\r\n                logs: [`title expert \"Franken ${subset_type}\"`],\r\n                snapshot: {\r\n                    annotations: grp_cmds\r\n                }\r\n            },\r\n            {\r\n                type: 'final',\r\n                logs: [],\r\n                snapshot: {\r\n                    vertices: v_ids,\r\n                    annotations: []\r\n                }\r\n            }\r\n        ];\r\n        for (const found of pz.loopFaceConfig(order, [\r\n            ['key', ['rk', 'bk'], ['ck', 'bk']],\r\n            ['key', ['ck', 'bk'], ['rk', 'bk']],\r\n        ])) {\r\n            const face = found.face;\r\n            const eset_s = found.strongEdges;\r\n            const vset_s = found.strongVertices;\r\n            const eset_w = found.weakEdges;\r\n            const vset_wonly = found.weakOnlyVertices;\r\n            (_a = h_seg[0].logs) === null || _a === void 0 ? void 0 : _a.push(`log \"#key:${face.id} of #cell:${[...vset_s.map((v) => v.$['rc'].id)]} form a Franken ${subset_type === null || subset_type === void 0 ? void 0 : subset_type.toLocaleLowerCase()}.\"`);\r\n            grp_cmds.push(`highlight mark ${[...vset_s.map((v) => v.id)]} as determined`);\r\n            eset_s.forEach((e) => { grp_cmds.push(`highlight ${e.proj.type} ${e.proj.id} as based`); });\r\n            eset_w.forEach((e) => { grp_cmds.push(`highlight ${e.proj.type} ${e.proj.id} as affected`); });\r\n            grp_cmds.push(`highlight cell ${[...vset_s.map((v) => v.$['rc'].id)]} as intersect`);\r\n            for (const v_targ of vset_wonly) {\r\n                v_ids.delete(v_targ.id);\r\n                (_b = h_seg[1].logs) === null || _b === void 0 ? void 0 : _b.push(`log \"#v:${v_targ.id} is erased.\"`);\r\n                grp_cmds.push(`highlight mark ${v_targ.id} as removed`);\r\n            }\r\n            return h_seg;\r\n        }\r\n        return [];\r\n    };\r\n};\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_strats/fish.ts?");

/***/ }),

/***/ "./source/so_strats/hidden.ts":
/*!************************************!*\
  !*** ./source/so_strats/hidden.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst so_solver_1 = __webpack_require__(/*! ../so_solver */ \"./source/so_solver.ts\");\r\nso_solver_1.SOSolver.prototype.hiddenSingle = function (pz) {\r\n    var _a, _b;\r\n    const v_ids = new Set(this.snapshot.vertices);\r\n    const v_id_dets = new Set(this.snapshot.determined);\r\n    const grp_cmds_rm = new Array();\r\n    const grp_cmds_det = new Array();\r\n    const h_seg = [\r\n        {\r\n            type: 'initial',\r\n            logs: [`title novice \"Hidden Single\"`],\r\n            snapshot: {\r\n                annotations: grp_cmds_rm\r\n            }\r\n        },\r\n        {\r\n            type: 'middle',\r\n            logs: [],\r\n            snapshot: {\r\n                vertices: v_ids,\r\n                determined: v_id_dets,\r\n                annotations: grp_cmds_det\r\n            }\r\n        },\r\n        {\r\n            type: 'final',\r\n            logs: [],\r\n            snapshot: {\r\n                annotations: []\r\n            }\r\n        }\r\n    ];\r\n    for (const edge of pz.loopEdges(['rk', 'ck', 'bk'])) {\r\n        const f_proj = edge.proj;\r\n        const vset = edge.$['v'];\r\n        if (vset.size > 1) {\r\n            continue;\r\n        }\r\n        const v_first = [...vset][0];\r\n        if (v_id_dets.has(v_first.id)) {\r\n            continue;\r\n        }\r\n        const e_cell = v_first.$['rc'];\r\n        const v_visible = new Set(e_cell.$['v']);\r\n        v_visible.delete(v_first);\r\n        if (v_visible.size == 0) {\r\n            continue;\r\n        }\r\n        (_a = h_seg[0].logs) === null || _a === void 0 ? void 0 : _a.push(`log \"#v:${v_first.id} is a hidden single in #${f_proj.type}:${f_proj.id}.\"`);\r\n        grp_cmds_rm.push(`highlight mark ${v_first.id} as determined`);\r\n        grp_cmds_rm.push(`highlight ${f_proj.type} ${f_proj.id} as based`);\r\n        grp_cmds_rm.push(`highlight cell ${e_cell.id} as intersect`);\r\n        for (const v_targ of v_visible) {\r\n            v_ids.delete(v_targ.id);\r\n            (_b = h_seg[1].logs) === null || _b === void 0 ? void 0 : _b.push(`log \"#v:${v_targ.id} is in the same unit as the hidden single, hence is removed.\"`);\r\n            grp_cmds_rm.push(`highlight mark ${v_targ.id} as removed`);\r\n        }\r\n        v_id_dets.add(v_first.id);\r\n        grp_cmds_det.push(`highlight cell ${e_cell.id} as determined`);\r\n        return h_seg;\r\n    }\r\n    return [];\r\n};\r\nso_solver_1.SOSolver.prototype.hiddenSubsetGenerator = function (order) {\r\n    if (!Number.isInteger(order) || order < 2 || order > 4) {\r\n        throw RangeError(`Invalid range of parameter.`);\r\n    }\r\n    const subset_type = { [2]: 'Pair', [3]: 'Triple', [4]: 'Quad' }[order];\r\n    return (pz) => {\r\n        var _a, _b;\r\n        const v_ids = new Set(this.snapshot.vertices);\r\n        const grp_cmds = new Array();\r\n        const h_seg = [\r\n            {\r\n                type: 'initial',\r\n                logs: [`title apprentice \"Hidden ${subset_type}\"`],\r\n                snapshot: {\r\n                    annotations: grp_cmds\r\n                }\r\n            },\r\n            {\r\n                type: 'final',\r\n                logs: [],\r\n                snapshot: {\r\n                    vertices: v_ids,\r\n                    annotations: []\r\n                }\r\n            }\r\n        ];\r\n        for (const found of pz.loopFaceConfig(order, [\r\n            ['row', 'rk', 'rc'],\r\n            ['col', 'ck', 'rc'],\r\n            ['box', 'bk', 'rc']\r\n        ])) {\r\n            const face = found.face;\r\n            const vset_s = found.strongVertices;\r\n            const eset_w = found.weakEdges;\r\n            const vset_wonly = found.weakOnlyVertices;\r\n            (_a = h_seg[0].logs) === null || _a === void 0 ? void 0 : _a.push(`log \"#cell:${[...eset_w.map((e) => e.id)]} form a hidden ${subset_type === null || subset_type === void 0 ? void 0 : subset_type.toLocaleLowerCase()} in #${face.type}:${face.id}.\"`);\r\n            grp_cmds.push(`highlight mark ${[...vset_s.map((v) => v.id)]} as determined`);\r\n            grp_cmds.push(`highlight ${face.type} ${face.id} as based`);\r\n            grp_cmds.push(`highlight cell ${[...eset_w.map((e) => e.id)]} as intersect`);\r\n            for (const v_targ of vset_wonly) {\r\n                v_ids.delete(v_targ.id);\r\n                (_b = h_seg[1].logs) === null || _b === void 0 ? void 0 : _b.push(`log \"#v:${v_targ.id} is erased.\"`);\r\n                grp_cmds.push(`highlight mark ${v_targ.id} as removed`);\r\n            }\r\n            return h_seg;\r\n        }\r\n        return [];\r\n    };\r\n};\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_strats/hidden.ts?");

/***/ }),

/***/ "./source/so_strats/intersect.ts":
/*!***************************************!*\
  !*** ./source/so_strats/intersect.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst so_graph_1 = __webpack_require__(/*! ../so_graph */ \"./source/so_graph.ts\");\r\nconst so_solver_1 = __webpack_require__(/*! ../so_solver */ \"./source/so_solver.ts\");\r\nso_solver_1.SOSolver.prototype.intersectionPointing = function (pz) {\r\n    var _a, _b;\r\n    const v_ids = new Set(this.snapshot.vertices);\r\n    const grp_cmds = new Array();\r\n    const h_seg = [\r\n        {\r\n            type: 'initial',\r\n            logs: [`title novice \"Intersection (Pointing)\"`],\r\n            snapshot: {\r\n                annotations: grp_cmds\r\n            }\r\n        },\r\n        {\r\n            type: 'final',\r\n            logs: [],\r\n            snapshot: {\r\n                vertices: v_ids,\r\n                annotations: []\r\n            }\r\n        }\r\n    ];\r\n    for (const [e_line, e_box] of pz.loopLineBox()) {\r\n        const vset_box = e_box.$['v'];\r\n        const vset_line = e_line.$['v'];\r\n        const vset_band = Set.intersection(vset_box, vset_line);\r\n        if (!(vset_box.size == vset_band.size && vset_line.size > vset_band.size)) {\r\n            continue;\r\n        }\r\n        (_a = h_seg[0].logs) === null || _a === void 0 ? void 0 : _a.push(`log \"The #box:${e_box.proj.id} and #${e_line.proj.type}:${e_line.proj.id} forms a locked configuration.\"`);\r\n        grp_cmds.push(`highlight mark ${[...vset_band.map((v) => v.id)]} as determined`);\r\n        grp_cmds.push(`highlight ${e_line.proj.type} ${e_line.proj.id} as affected`);\r\n        grp_cmds.push(`highlight box ${e_box.proj.id} as based`);\r\n        grp_cmds.push(`highlight cell ${[...Set.intersection(e_line.$['rc'], e_box.$['rc']).map((e) => e.id)]} as intersect`);\r\n        for (const v_targ of Set.diff(vset_line, vset_band)) {\r\n            v_ids.delete(v_targ.id);\r\n            (_b = h_seg[1].logs) === null || _b === void 0 ? void 0 : _b.push(`log \"#v:${v_targ.id} in #${e_line.proj.type}:${e_box.proj.id} is erased by the pointer.\"`);\r\n            grp_cmds.push(`highlight mark ${v_targ.id} as removed`);\r\n        }\r\n        return h_seg;\r\n    }\r\n    return [];\r\n};\r\nso_solver_1.SOSolver.prototype.intersectionClaiming = function (pz) {\r\n    var _a, _b;\r\n    const v_ids = new Set(this.snapshot.vertices);\r\n    const grp_cmds = new Array();\r\n    const h_seg = [\r\n        {\r\n            type: 'initial',\r\n            logs: [`title novice \"Intersection (Claiming)\"`],\r\n            snapshot: {\r\n                annotations: grp_cmds\r\n            }\r\n        },\r\n        {\r\n            type: 'final',\r\n            logs: [],\r\n            snapshot: {\r\n                vertices: v_ids,\r\n                annotations: []\r\n            }\r\n        }\r\n    ];\r\n    for (const [e_line, e_box] of pz.loopLineBox()) {\r\n        const vset_box = e_box.$['v'];\r\n        const vset_line = e_line.$['v'];\r\n        const vset_band = Set.intersection(vset_box, vset_line);\r\n        if (!(vset_line.size == vset_band.size && vset_box.size > vset_band.size)) {\r\n            continue;\r\n        }\r\n        (_a = h_seg[0].logs) === null || _a === void 0 ? void 0 : _a.push(`log \"The #box:${e_box.proj.id} and #${e_line.proj.type}:${e_line.proj.id} forms a locked configuration.\"`);\r\n        grp_cmds.push(`highlight mark ${[...vset_band.map((v) => v.id)]} as determined`);\r\n        grp_cmds.push(`highlight box ${e_box.proj.id} as affected`);\r\n        grp_cmds.push(`highlight ${e_line.proj.type} ${e_line.proj.id} as based`);\r\n        grp_cmds.push(`highlight cell ${[...Set.intersection(e_line.$['rc'], e_box.$['rc']).map((e) => e.id)]} as intersect`);\r\n        for (const v_targ of Set.diff(vset_box, vset_band)) {\r\n            v_ids.delete(v_targ.id);\r\n            (_b = h_seg[1].logs) === null || _b === void 0 ? void 0 : _b.push(`log \"#v:${v_targ.id} in #box:${e_box.proj.id + 1} is erased by the claimer.\"`);\r\n            grp_cmds.push(`highlight mark ${v_targ.id} as removed`);\r\n        }\r\n        return h_seg;\r\n    }\r\n    return [];\r\n};\r\nso_graph_1.SOPuzzle.prototype.loopLineBox = function* () {\r\n    for (const e_type of ['rk', 'ck']) {\r\n        for (const e_line of this.adE[e_type]) {\r\n            for (const e_box of e_line.$['bk']) {\r\n                yield [e_line, e_box];\r\n            }\r\n        }\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_strats/intersect.ts?");

/***/ }),

/***/ "./source/so_strats/naked.ts":
/*!***********************************!*\
  !*** ./source/so_strats/naked.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst so_solver_1 = __webpack_require__(/*! ../so_solver */ \"./source/so_solver.ts\");\r\nso_solver_1.SOSolver.prototype.nakedSingle = function (pz) {\r\n    let is_updated = false;\r\n    const v_id_dets = new Set(this.snapshot.determined);\r\n    const grp_cmds = new Array();\r\n    const h_seg = [\r\n        {\r\n            type: 'initial',\r\n            logs: [`title novice \"Naked Single\"`],\r\n            snapshot: {\r\n                determined: v_id_dets,\r\n                annotations: grp_cmds\r\n            }\r\n        },\r\n        {\r\n            type: 'final',\r\n            logs: [],\r\n            snapshot: {\r\n                annotations: []\r\n            }\r\n        }\r\n    ];\r\n    for (const edge of pz.adE['rc']) {\r\n        const vset = edge.$['v'];\r\n        const v_first = [...vset][0];\r\n        if (vset.size == 1 && !v_id_dets.has(v_first.id)) {\r\n            is_updated = true;\r\n            v_id_dets.add(v_first.id);\r\n            grp_cmds.push(`highlight cell ${v_first.$['rc'].id} as determined`);\r\n        }\r\n    }\r\n    return (is_updated) ? h_seg : [];\r\n};\r\nso_solver_1.SOSolver.prototype.nakedSubsetGenerator = function (order) {\r\n    if (!Number.isInteger(order) || order < 2 || order > 4) {\r\n        throw RangeError(`Invalid range of parameter.`);\r\n    }\r\n    const subset_type = { [2]: 'Pair', [3]: 'Triple', [4]: 'Quad' }[order];\r\n    return (pz) => {\r\n        var _a, _b;\r\n        const v_ids = new Set(this.snapshot.vertices);\r\n        const grp_cmds = new Array();\r\n        const h_seg = [\r\n            {\r\n                type: 'initial',\r\n                logs: [`title apprentice \"Naked ${subset_type}\"`],\r\n                snapshot: {\r\n                    annotations: grp_cmds\r\n                }\r\n            },\r\n            {\r\n                type: 'final',\r\n                logs: [],\r\n                snapshot: {\r\n                    vertices: v_ids,\r\n                    annotations: []\r\n                }\r\n            }\r\n        ];\r\n        for (const found of pz.loopFaceConfig(order, [\r\n            ['row', 'rc', 'rk'],\r\n            ['col', 'rc', 'ck'],\r\n            ['box', 'rc', 'bk']\r\n        ])) {\r\n            const face = found.face;\r\n            const eset_s = found.strongEdges;\r\n            const vset_s = found.strongVertices;\r\n            const vset_wonly = found.weakOnlyVertices;\r\n            (_a = h_seg[0].logs) === null || _a === void 0 ? void 0 : _a.push(`log \"#cell:${[...eset_s.map((e) => e.id)]} form a naked ${subset_type === null || subset_type === void 0 ? void 0 : subset_type.toLocaleLowerCase()} in #${face.type}:${face.id}.\"`);\r\n            grp_cmds.push(`highlight mark ${[...vset_s.map((v) => v.id)]} as determined`);\r\n            grp_cmds.push(`highlight ${face.type} ${face.id} as affected`);\r\n            grp_cmds.push(`highlight cell ${[...eset_s.map((e) => e.id)]} as intersect`);\r\n            for (const v_targ of vset_wonly) {\r\n                v_ids.delete(v_targ.id);\r\n                (_b = h_seg[1].logs) === null || _b === void 0 ? void 0 : _b.push(`log \"#v:${v_targ.id} is erased.\"`);\r\n                grp_cmds.push(`highlight mark ${v_targ.id} as removed`);\r\n            }\r\n            return h_seg;\r\n        }\r\n        return [];\r\n    };\r\n};\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_strats/naked.ts?");

/***/ }),

/***/ "./source/so_strats/obvious.ts":
/*!*************************************!*\
  !*** ./source/so_strats/obvious.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst so_solver_1 = __webpack_require__(/*! ../so_solver */ \"./source/so_solver.ts\");\r\nso_solver_1.SOSolver.prototype.obviousCandidateRemoval = function (pz) {\r\n    let is_updated = false;\r\n    const v_ids = new Set(this.snapshot.vertices);\r\n    const v_id_dets = this.snapshot.determined;\r\n    const grp_cmds = new Array();\r\n    const h_seg = [\r\n        {\r\n            type: 'initial',\r\n            logs: [`title novice \"Obvious Candidate Removal\"`],\r\n            snapshot: {\r\n                pencilmarked: new Set(pz.adE['rc'].keys()),\r\n                annotations: grp_cmds\r\n            }\r\n        },\r\n        {\r\n            type: 'final',\r\n            logs: [],\r\n            snapshot: {\r\n                vertices: v_ids,\r\n                annotations: []\r\n            }\r\n        }\r\n    ];\r\n    for (const v_id_src of v_id_dets) {\r\n        const v_src = pz.adV[v_id_src];\r\n        for (const v_targ of pz.getVisibles(v_src)) {\r\n            is_updated = true;\r\n            v_ids.delete(v_targ.id);\r\n            grp_cmds.push(`highlight mark ${v_targ.id} as removed`);\r\n        }\r\n    }\r\n    return (is_updated) ? h_seg : [];\r\n};\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_strats/obvious.ts?");

/***/ }),

/***/ "./source/so_strats/strats.ts":
/*!************************************!*\
  !*** ./source/so_strats/strats.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__exportStar(__webpack_require__(/*! ./obvious */ \"./source/so_strats/obvious.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./naked */ \"./source/so_strats/naked.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./hidden */ \"./source/so_strats/hidden.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./intersect */ \"./source/so_strats/intersect.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./fish */ \"./source/so_strats/fish.ts\"), exports);\r\n__exportStar(__webpack_require__(/*! ./aic */ \"./source/so_strats/aic.ts\"), exports);\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/so_strats/strats.ts?");

/***/ }),

/***/ "./source/system/canvas.ts":
/*!*********************************!*\
  !*** ./source/system/canvas.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PuzzleCanvas = exports.SVG = void 0;\r\n__webpack_require__(/*! ../math/math */ \"./source/math/math.ts\");\r\nconst tools_1 = __webpack_require__(/*! ../basic/tools */ \"./source/basic/tools.ts\");\r\nclass SVG {\r\n    constructor(tag_name, attr) {\r\n        this.element = document.createElementNS('http://www.w3.org/2000/svg', tag_name);\r\n        if (tag_name == 'svg') {\r\n            this.attr({\r\n                'xmlns': 'http://www.w3.org/2000/svg',\r\n                'xmlns:xlink': 'http://www.w3.org/1999/xlink'\r\n            });\r\n        }\r\n        return this.attr(attr);\r\n    }\r\n    html(html) {\r\n        this.element.innerHTML = html;\r\n        return this;\r\n    }\r\n    attr(attr = {}) {\r\n        for (const key in attr) {\r\n            if (typeof attr[key] == 'undefined' || attr[key] == null) {\r\n                this.element.removeAttribute(key);\r\n            }\r\n            else {\r\n                this.element.setAttribute(key, attr[key]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    addTo(parent) {\r\n        if (parent instanceof SVG) {\r\n            parent = parent.element;\r\n        }\r\n        if (!parent.contains(this.element)) {\r\n            parent.appendChild(this.element);\r\n        }\r\n        return this;\r\n    }\r\n    remove(child) {\r\n        if (child instanceof SVG) {\r\n            child = child.element;\r\n        }\r\n        if (this.element.contains(child)) {\r\n            this.element.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n    use(id, attr) {\r\n        return new SVG('use').attr({ 'href': id }).attr(attr).addTo(this.element);\r\n    }\r\n    g(attr) {\r\n        return new SVG('g').attr(attr).addTo(this.element);\r\n    }\r\n    defs(attr) {\r\n        return new SVG('defs').attr(attr).addTo(this.element);\r\n    }\r\n    symbol(attr) {\r\n        return new SVG('symbol').attr(attr).addTo(this.element);\r\n    }\r\n    rect(attr) {\r\n        return new SVG('rect').attr(attr).addTo(this.element);\r\n    }\r\n    circle(attr) {\r\n        return new SVG('circle').attr(attr).addTo(this.element);\r\n    }\r\n    ellipse(attr) {\r\n        return new SVG('ellipse').attr(attr).addTo(this.element);\r\n    }\r\n    line(attr) {\r\n        return new SVG('line').attr(attr).addTo(this.element);\r\n    }\r\n    polygon(attr) {\r\n        return new SVG('polygon').attr(attr).addTo(this.element);\r\n    }\r\n    polyline(attr) {\r\n        return new SVG('polyline').attr(attr).addTo(this.element);\r\n    }\r\n    path(attr) {\r\n        return new SVG('path').attr(attr).addTo(this.element);\r\n    }\r\n    text(text, attr) {\r\n        return new SVG('text').html(text).attr(attr).addTo(this.element);\r\n    }\r\n}\r\nexports.SVG = SVG;\r\nclass SVGGroup {\r\n    constructor(group) {\r\n        this.group = group;\r\n        this.elements = new Map();\r\n    }\r\n    get(key) {\r\n        return this.elements.get(key);\r\n    }\r\n    set(key, elem) {\r\n        this.elements.set(key, elem);\r\n        this;\r\n    }\r\n    show(key) {\r\n        if (!this.elements.has(key)) {\r\n            return;\r\n        }\r\n        const elem = this.elements.get(key);\r\n        return elem.addTo(this.group);\r\n    }\r\n    hide(key) {\r\n        if (!this.elements.has(key)) {\r\n            return;\r\n        }\r\n        const elem = this.elements.get(key);\r\n        this.group.remove(elem.element);\r\n        return elem;\r\n    }\r\n    showAll() {\r\n        this.elements.map((_, elem) => elem.addTo(this.group));\r\n        return this;\r\n    }\r\n    hideAll() {\r\n        this.elements.map((_, elem) => this.group.remove(elem));\r\n        return this;\r\n    }\r\n    clearStyle(arg) {\r\n        const elem = (arg instanceof SVG) ? arg : this.elements.get(arg);\r\n        const attr_remove = ['fill', 'stroke', 'stroke-width'];\r\n        if (typeof elem == 'undefined') {\r\n            return;\r\n        }\r\n        for (const attr of attr_remove) {\r\n            elem.element.removeAttribute(attr);\r\n        }\r\n        return elem;\r\n    }\r\n    clearAll() {\r\n        this.elements.map((_, elem) => this.clearStyle(elem));\r\n        return this;\r\n    }\r\n}\r\nclass PuzzleCanvas extends SVG {\r\n    constructor(options = {}) {\r\n        super('svg');\r\n        const o = PuzzleCanvas.computeStyle(options);\r\n        this.attr({\r\n            width: o['canvas-width'],\r\n            height: o['canvas-height'],\r\n            viewBox: `0 0 ${o['canvas-width']} ${o['canvas-height']}`,\r\n            'text-anchor': 'middle',\r\n            'dominant-baseline': 'middle'\r\n        });\r\n        const rows = o['rows'];\r\n        const cols = o['columns'];\r\n        const Dp = o['dimension'];\r\n        const D1 = Math.pow(Dp, 2);\r\n        this.rect({ id: 'bg', width: o['canvas-width'], height: o['canvas-height'] }).attr(o['background']);\r\n        this.headerGroup = this.g({ id: 'header' }).attr(o['header-font']);\r\n        if (o['headers'] == 'display') {\r\n            const c_hdr_size = 0.5 * (o['header-size'] + o['grid-padding']);\r\n            for (const i of new Array(rows).keys()) {\r\n                const cell_xy = PuzzleCanvas.cellCenterXY(0, i, o);\r\n                this.headerGroup.text(o['header-row-symbols'].charAt(i), { x: c_hdr_size, y: cell_xy[1] });\r\n            }\r\n            for (const i of new Array(cols).keys()) {\r\n                const cell_xy = PuzzleCanvas.cellCenterXY(i, 0, o);\r\n                this.headerGroup.text(o['header-column-symbols'].charAt(i), { x: cell_xy[0], y: c_hdr_size });\r\n            }\r\n        }\r\n        const cell_dw = o['cell-size'];\r\n        this.cellRects = new SVGGroup(this.g({ id: 'cell_rect', fill: 'white' }));\r\n        this.cellTexts = new SVGGroup(this.g({ id: 'cell_text' }).attr(o['cell-font']));\r\n        for (const [x, y] of (0, tools_1.multirange)(rows, cols)) {\r\n            const index = y * cols + x;\r\n            const pos = PuzzleCanvas.cellXY(x, y, o);\r\n            this.cellRects.set(index, new SVG('rect', { x: pos[0], y: pos[1], width: cell_dw, height: cell_dw, rx: 4, ry: 4 }));\r\n            this.cellTexts.set(index, new SVG('text', { x: pos[0] + 0.5 * cell_dw, y: pos[1] + 0.5 * cell_dw }));\r\n        }\r\n        const mark_dw = o['mark-size'];\r\n        this.markRects = new SVGGroup(this.g({ id: 'mark_rect' }));\r\n        this.markTexts = new SVGGroup(this.g({ id: 'mark_text' }).attr(o['mark-font']));\r\n        for (const [x, y, key] of (0, tools_1.multirange)(cols, rows, D1)) {\r\n            const index = (y * cols + x) * D1 + key;\r\n            const pos = PuzzleCanvas.markXY(x, y, key, o);\r\n            this.markRects.set(index, new SVG('rect', { x: pos[0], y: pos[1], width: mark_dw, height: mark_dw, rx: 4, ry: 4 }));\r\n            this.markTexts.set(index, new SVG('text')\r\n                .html(o['mark-symbols'].charAt(key))\r\n                .attr({ x: pos[0] + 0.5 * mark_dw, y: pos[1] + 0.5 * mark_dw }));\r\n        }\r\n        this.drawing = this.g({ id: 'drawing' });\r\n        this.cellRects.showAll();\r\n        this.style = o;\r\n    }\r\n    static computeStyle(o = {}) {\r\n        o = Object.assign(Object.assign({}, PuzzleCanvas.options), o);\r\n        if (o['rows'] != o['header-row-symbols'].length) {\r\n            throw RangeError(`The length of the row header does not match the number of rows.`);\r\n        }\r\n        else if (o['columns'] != o['header-column-symbols'].length) {\r\n            throw RangeError(`The length of the column header does not match the number of columns.`);\r\n        }\r\n        else if (Math.pow(o['dimension'], 2) != o['mark-symbols'].length) {\r\n            throw RangeError(`The length of the column header does not match the number of columns.`);\r\n        }\r\n        const Dp = o['dimension'];\r\n        o['cell-size'] = Dp * o['mark-size'] + (Dp - 1) * o['cell-inner-sep'] + 2 * o['cell-padding'];\r\n        o['box-size'] = Dp * o['cell-size'] + (Dp - 1) * o['box-inner-sep'] + 2 * o['box-padding'];\r\n        const cell_p = [o['columns'], o['rows']];\r\n        const box_p = cell_p.map((v) => Math.ceil(v / Dp));\r\n        const grid_wh = cell_p.map((_, i) => (cell_p[i] * o['cell-size']\r\n            + (cell_p[i] - box_p[i]) * o['box-inner-sep']\r\n            + 2 * box_p[i] * o['box-padding']\r\n            + (box_p[i] - 1) * o['grid-inner-sep']\r\n            + 2 * o['grid-padding']));\r\n        o['grid-width'] = grid_wh[0];\r\n        o['grid-height'] = grid_wh[1];\r\n        o['canvas-width'] = o['grid-width'] + (o['headers'] == 'display' ? o['header-size'] : 0);\r\n        o['canvas-height'] = o['grid-height'] + (o['headers'] == 'display' ? o['header-size'] : 0);\r\n        return o;\r\n    }\r\n    static cellXY(x, y, o) {\r\n        if (!('cell-size' in o)) {\r\n            throw TypeError(`The property 'cell-size' has not been computed yet.`);\r\n        }\r\n        const Dp = o['dimension'];\r\n        const idx = [x, y];\r\n        const box_idx = idx.map((v) => Math.trunc(v / Dp));\r\n        return idx.map((_, i) => {\r\n            return ((o['headers'] == 'display' ? o['header-size'] : 0)\r\n                + box_idx[i] * o['grid-inner-sep']\r\n                + o['grid-padding']\r\n                + (idx[i] - box_idx[i]) * o['box-inner-sep']\r\n                + (2 * box_idx[i] + 1) * o['box-padding']\r\n                + idx[i] * o['cell-size']);\r\n        });\r\n    }\r\n    static cellCenterXY(x, y, o) {\r\n        if (!('cell-size' in o)) {\r\n            throw TypeError(`The property 'cell-size' has not been computed yet.`);\r\n        }\r\n        return PuzzleCanvas.cellXY(x, y, o).map((v) => v + 0.5 * o['cell-size']);\r\n    }\r\n    static markXY(x, y, key, o) {\r\n        if (!('cell-size' in o)) {\r\n            throw TypeError(`The property 'cell-size' has not been computed yet.`);\r\n        }\r\n        const Dp = o['dimension'];\r\n        const pos = [x, y];\r\n        const cell_xy = PuzzleCanvas.cellXY(x, y, o);\r\n        const mark_idx = [key % Dp, Math.trunc(key / Dp)];\r\n        return pos.map((_, i) => {\r\n            return (cell_xy[i] + mark_idx[i] * (o['cell-inner-sep'] + o['mark-size']) + o['cell-inner-sep']);\r\n        });\r\n    }\r\n    static markCenterXY(x, y, key, o) {\r\n        return PuzzleCanvas.markXY(x, y, key, o).map((v) => v + 0.5 * o['mark-size']);\r\n    }\r\n}\r\nexports.PuzzleCanvas = PuzzleCanvas;\r\nPuzzleCanvas.options = {\r\n    'rows': 9,\r\n    'columns': 9,\r\n    'dimension': 3,\r\n    'mark-size': 14,\r\n    'mark-symbols': '123456789',\r\n    'cell-inner-sep': 1,\r\n    'cell-padding': 1,\r\n    'box-inner-sep': 1,\r\n    'box-padding': 0,\r\n    'grid-inner-sep': 3,\r\n    'grid-padding': 4,\r\n    'headers': 'display',\r\n    'header-size': 12,\r\n    'header-row-symbols': 'ABCDEFGHJ',\r\n    'header-column-symbols': '123456789',\r\n    'background': {\r\n        fill: 'black',\r\n        rx: 4,\r\n        ry: 4\r\n    },\r\n    'header-font': {\r\n        'font-family': 'Helvetica',\r\n        'font-size': 10,\r\n        fill: 'white'\r\n    },\r\n    'mark-font': {\r\n        'font-family': 'Helvetica',\r\n        'font-size': 9,\r\n        fill: 'black'\r\n    },\r\n    'cell-font': {\r\n        'font-family': 'Helvetica',\r\n        'font-size': 30,\r\n        fill: 'black'\r\n    },\r\n    'rect:removed': {\r\n        'fill': 'yellow',\r\n        'stroke': 'pink',\r\n        'stroke-width': 0.75\r\n    },\r\n    'rect:determined': {\r\n        'fill': '#6fff83',\r\n        'stroke': 'olive',\r\n        'stroke-width': 0.75\r\n    },\r\n    'rect:based': {\r\n        'fill': '#00CED1',\r\n        'stroke': '#2F4F4F',\r\n        'stroke-width': 0.75\r\n    },\r\n    'rect:intersect': {\r\n        'fill': '#73b2ff',\r\n        'stroke': 'blue',\r\n        'stroke-width': 0.75\r\n    },\r\n    'rect:affected': {\r\n        'fill': 'pink',\r\n        'stroke': 'red',\r\n        'stroke-width': 0.75\r\n    },\r\n    'text:removed': {\r\n        'fill': 'red'\r\n    },\r\n    'text:determined': {\r\n        'fill': 'blue'\r\n    },\r\n    'text:intersect': {},\r\n    'text:based': {},\r\n    'text:affected': {},\r\n};\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/system/canvas.ts?");

/***/ }),

/***/ "./source/system/memento.ts":
/*!**********************************!*\
  !*** ./source/system/memento.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Caretaker = exports.Memento = exports.Originator = void 0;\r\nclass Originator {\r\n}\r\nexports.Originator = Originator;\r\nclass Memento {\r\n    constructor(type = 'undefined', pmem) {\r\n        this.type = 'undefined';\r\n        this.type = type;\r\n        this.snapshot = {};\r\n        this.logs = [];\r\n        this.selected = NaN;\r\n        if (typeof pmem != 'undefined') {\r\n            this.copyFrom(pmem);\r\n        }\r\n    }\r\n    isInitial() {\r\n        return (this.type.match(/initial/) != null);\r\n    }\r\n    isFinal() {\r\n        return (this.type.match(/final/) != null);\r\n    }\r\n    copyFrom(pmem) {\r\n        var _a, _b, _c;\r\n        this.type = (_a = pmem.type) !== null && _a !== void 0 ? _a : this.type;\r\n        this.logs = (_b = pmem.logs) !== null && _b !== void 0 ? _b : this.logs;\r\n        this.selected = (pmem.selected && pmem.selected != NaN) ? pmem.selected : this.selected;\r\n        Object.assign(this.snapshot, (_c = pmem.snapshot) !== null && _c !== void 0 ? _c : {});\r\n        return this;\r\n    }\r\n}\r\nexports.Memento = Memento;\r\nclass Caretaker {\r\n    constructor(originator) {\r\n        this.history = new Array();\r\n        this.time = -1;\r\n        this.originator = originator;\r\n    }\r\n    atEnd() {\r\n        return (this.time == this.history.length - 1);\r\n    }\r\n    now() {\r\n        var _a;\r\n        return (_a = this.history[this.time]) !== null && _a !== void 0 ? _a : null;\r\n    }\r\n    last() {\r\n        var _a;\r\n        return (_a = this.history[this.history.length - 1]) !== null && _a !== void 0 ? _a : null;\r\n    }\r\n    getLastFinalTime(time) {\r\n        for (let t = time; t >= 0; t--) {\r\n            if (this.history[t].isFinal()) {\r\n                return t;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    init(pmem) {\r\n        this.history = [];\r\n        this.history.push(pmem);\r\n        this.time = 0;\r\n    }\r\n    addSegment(segment) {\r\n        const last_final = this.getLastFinalTime(this.time);\r\n        if (last_final == -1) {\r\n            throw RangeError(`Something is wrong; there are no final events up to the specified time.`);\r\n        }\r\n        this.history = this.history.slice(0, last_final + 1);\r\n        for (const pmem of segment) {\r\n            this.history.push(new Memento().copyFrom(this.last()).copyFrom(pmem));\r\n        }\r\n    }\r\n    moveTo(time_new) {\r\n        if (time_new >= this.history.length || time_new < 0) {\r\n            return false;\r\n        }\r\n        this.time = time_new;\r\n        this.originator.load(this.history[this.time], this.time);\r\n        return true;\r\n    }\r\n    moveBy(dt) {\r\n        return this.moveTo(this.time + dt);\r\n    }\r\n}\r\nexports.Caretaker = Caretaker;\r\n\n\n//# sourceURL=webpack://my-webpack-project/./source/system/memento.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./source/index.ts");
/******/ 	
/******/ })()
;