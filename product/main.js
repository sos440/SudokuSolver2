(()=>{"use strict";var e={471:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.uint8_to_b64=t.b64_to_uint8=void 0;const r=[...String.fromCharCode(...new Array(26).fill(0).map(((e,t)=>65+t))),...String.fromCharCode(...new Array(26).fill(0).map(((e,t)=>97+t))),...String.fromCharCode(...new Array(10).fill(0).map(((e,t)=>48+t))),"+","/"],s=new Map(r.map(((e,t)=>[e,t])));s.set("=",0);const o=/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/;t.uint8_to_b64=e=>{var t,s;const o=Math.ceil(e.length/3),i=new Array(4*o);for(let n=0;n<o;n++){const o=e.subarray(3*n,3*(n+1)),a=o[0],l=null!==(t=o[1])&&void 0!==t?t:0,c=null!==(s=o[2])&&void 0!==s?s:0;i[4*n]=r[a>>2],i[4*n+1]=r[(3&a)<<4|l>>4],i[4*n+2]=r[(15&l)<<2|c>>6],i[4*n+3]=r[63&c]}return e.length%3==1&&(i[i.length-1]="=",i[i.length-2]="="),e.length%3==2&&(i[i.length-1]="="),i.join("")},t.b64_to_uint8=e=>{var t;if(!e.match(o))throw TypeError("The input does not match the base64 format.");const r=Math.trunc(e.length/4),i=(null!==(t=e.match(/={1,2}$/))&&void 0!==t?t:[])[0].length,n=new Uint8Array(3*r-i);for(let t=0;t<r;t++){const r=[...e.substring(4*t,4*(t+1))],[o,i,a,l]=r.map((e=>{var t;return null!==(t=s.get(e))&&void 0!==t?t:0}));n[3*t]=o<<2|i>>4,n[3*t+1]=(15&i)<<4|a>>2,n[3*t+2]=(3&a)<<6|l}return n}},406:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Hypergraph=t.NullEdgeGroup=t.NullHyperedge=t.Hyperedge=t.NullLabeledVertex=t.LabeledVertex=void 0;const s=r(740);class o extends Map{}t.LabeledVertex=o,t.NullLabeledVertex=new o,t.Hyperedge=(0,s.createMSetClass)(t.NullLabeledVertex),t.NullHyperedge=new t.Hyperedge,t.NullEdgeGroup=new Set;class i{constructor(...e){this.edges=new Set,this.edgeGroups=new Map;for(const t of e)this.edgeGroups.set(t,new Set);this.incidency=new Map,this.info={type:"hypergraph"}}addVertex(e){return this.incidency.has(e)||this.incidency.set(e,new Set),this}deleteVertex(e){var r;if(this.incidency.has(e)){for(const s of null!==(r=this.incidency.get(e))&&void 0!==r?r:t.NullEdgeGroup)s.delete(e);return this.incidency.delete(e)}return!1}addEdge(e,t){var r,s;if(!this.edges.has(e)){this.edges.add(e),this.createEdgeGroup(t),null===(r=this.edgeGroups.get(t))||void 0===r||r.add(e);for(const t of e.elements())this.addVertex(t),null===(s=this.incidency.get(t))||void 0===s||s.add(e)}return this}deleteEdge(e){if(this.edges.has(e)){this.edges.delete(e);for(const[t,r]of this.edgeGroups)r.delete(e);for(const[t,r]of this.incidency)r.delete(e)}return!1}createEdgeGroup(e){return!this.edgeGroups.has(e)&&(this.edgeGroups.set(e,new Set),!0)}copy(){var e,r;const s=new i;Object.assign(s.info,this.info);for(const e of this.incidency.keys())s.addVertex(e);const o=new Map;for(const e of this.edges){const r=new t.Hyperedge(e);o.set(e,r),s.edges.add(r)}for(const[i,n]of this.edgeGroups){const a=new Set;s.edgeGroups.set(i,a);for(const i of n){const n=null!==(e=o.get(i))&&void 0!==e?e:t.NullHyperedge;a.add(n);for(const e of n.elements())null===(r=s.incidency.get(e))||void 0===r||r.add(n)}}return s}filterEdges(e){const t=this.copy();for(const r of t.edges)e(r,t)||t.deleteEdge(r);return t}filterVertices(e){const t=this.copy();for(const r of t.incidency.keys())e(r,t)||t.deleteVertex(r);return t}firstVertexOf(e,r){for(const t of this.incidency.keys())if(t.get(e)==r)return t;return t.NullLabeledVertex}}t.Hypergraph=i},740:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.createMSetClass=void 0,t.createMSetClass=e=>class t extends Map{constructor(e){if(super(),e instanceof t)for(const[t,r]of e)this.set(t,r);else if(e)for(const t of e)this.add(t)}get count(){return Array.from(this.values()).reduce(((e,t)=>e+t),0)}aget(e){var t;return null!==(t=this.get(e))&&void 0!==t?t:0}modify(e,t){var r;const s=(null!==(r=this.get(e))&&void 0!==r?r:0)+t;return 0==s?this.delete(e):this.set(e,s),this}add(e){return this.modify(e,1)}remove(e){return this.modify(e,-1)}elements(){return this.keys()}every(e){for(const[t,r]of this)if(!e(t,r,this))return!1;return!0}some(e){for(const[t,r]of this)if(e(t,r,this))return!0;return!1}filter(e){const r=new t;for(const[t,s]of this)e(t,s,this)&&r.set(t,s);return r}static geqZero(e){for(const[t,r]of e)if(r<0)return!1;return!0}static geq(e,t){var r,s;for(const[s,o]of e)if(o<(null!==(r=t.get(s))&&void 0!==r?r:0))return!1;for(const[r,o]of t)if(o>(null!==(s=e.get(r))&&void 0!==s?s:0))return!1;return!0}static add(...e){var r;const s=new t;for(const t of e)for(const[e,o]of t)s.set(e,(null!==(r=s.get(e))&&void 0!==r?r:0)+o);for(const[e,t]of s)0==t&&s.delete(e);return s}static subtract(e,r){var s;const o=new t;for(const[t,r]of e)o.set(t,r);for(const[e,t]of r)o.set(e,(null!==(s=o.get(e))&&void 0!==s?s:0)-t);for(const[e,t]of o)0==t&&o.delete(e);return o}pick(){for(const e of this.keys())return e;return e}}},726:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SolverStrategiesSV=void 0;const s=r(406);class o extends Map{}t.SolverStrategiesSV=new o,t.SolverStrategiesSV.set("naked_single",(e=>{const t=e.v_set,r=e.game,o=[],i=new Set(t),n=r.filterVertices((e=>t.has(e))),a=n.edgeGroups.get("rc")||s.NullEdgeGroup;for(const e of a)if(1==e.size){const t=e.pick()||s.NullLabeledVertex,r=s.Hyperedge.subtract(s.Hyperedge.add(...n.incidency.get(t)||s.NullEdgeGroup),e);r.delete(t);for(const[e,t]of r)t>0&&i.delete(e)}return i.size<t.size&&o.push({game:r,v_set:i,settings:{},view:{}}),o}))},548:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.HGSudokuVanilla=void 0;const s=r(471),o=r(466),i=r(406);class n extends i.Hypergraph{constructor(e){var t;super("rc","rk","ck","bk"),this.info.type="sudoku_vanilla",this.info.param=e,this.Dp=e,this.D1=Math.pow(this.Dp,2),this.D2=Math.pow(this.D1,2),this.D3=Math.pow(this.D1,3);const r=new o.BaseN(this.Dp),s=new o.BaseN(this.D1),n=new Array(this.D3),a={rc:new Array(this.D2),rk:new Array(this.D2),ck:new Array(this.D2),bk:new Array(this.D2)};let l;for(l in a){const e=a[l];for(const t of e.keys())e[t]=new i.Hyperedge}for(const e of n.keys()){const o=new i.LabeledVertex;n[e]=o,this.addVertex(o);const[l,c,d]=s.toDigits(e,3),f=r.toDigits(e,6),h=r.fromDigits([f[0],f[2]]),u=r.fromDigits([f[1],f[3]]);let g;for(g in o.set("index",e),o.set("row",l),o.set("col",c),o.set("key",d),o.set("box",h),o.set("inn",u),o.set("rc",s.fromDigits([l,c])),o.set("rk",s.fromDigits([l,d])),o.set("ck",s.fromDigits([c,d])),o.set("bk",s.fromDigits([h,d])),a){const e=a[g][o.get(g)];e.add(o),null===(t=this.incidency.get(o))||void 0===t||t.add(e)}}for(l in a){const e=a[l];this.edgeGroups.set(l,new Set(e));for(const t of e)this.edges.add(t)}}import(e,t="base64"){if(e.length==this.D2?t="simple":"data:"==e.substring(0,5)&&(t="base64"),"simple"==t){const t=[];for(const[r,s]of Array.from(e).entries()){const e=r*this.D1;if("1"<=s&&s<="9")t.push(e+parseInt(s)-1);else for(const r of new Array(this.D1).keys())t.push(e+r)}return this.filterVertices((e=>t.indexOf(e.get("index"))>=0))}if("base64"==t){const t=(0,s.b64_to_uint8)(e.substring(5)),r=[];for(const[e,s]of t.entries()){let t=8*e;for(let e=0;e<8&&!(t>=this.D3);e++)(s&1<<e)>0&&r.push(t),t++}return this.filterVertices((e=>r.indexOf(e.get("index"))>=0))}if("candibox"==t)return this.copy();throw TypeError(`'${t}' is not a valid format.`)}export(e,t="base64"){var r,n,a,l;if(e.info.type!=this.info.type||e.info.param!=this.info.param)throw TypeError("The source Hypergraph is not a subgraph of 'this' graph.");if("simple"==t){const t=new Array(this.D2).fill("."),s=null!==(r=e.edgeGroups.get("rc"))&&void 0!==r?r:i.NullEdgeGroup;for(const e of s)if(1==e.size){const r=e.pick()||i.NullLabeledVertex;t[null!==(n=r.get("rc"))&&void 0!==n?n:-1]=String.fromCharCode(49+(null!==(a=r.get("key"))&&void 0!==a?a:0))}return t.join("")}if("base64"==t){const t=new Uint8Array(Math.ceil(this.D3/8));for(const r of t.keys()){let s=0;for(let t=0;t<8;t++)e.firstVertexOf("index",8*r+t)!=i.NullLabeledVertex&&(s|=1<<t);t[r]=s}return`data:${(0,s.uint8_to_b64)(t)}`}if("candibox"==t){const t=`*${new Array(this.Dp).fill(new Array(this.Dp).fill(" ").join("")).join("*")}*`,r=new Array(this.Dp).fill(t).join(""),s=Array.from(r).map((e=>"*"==e?new Array(r.length).fill("*").join(""):r)).join("\n"),i=Array.from(s),n=[];for(const[e,t]of i.entries())" "==t&&n.push(e);const a=new o.BaseN(this.Dp);for(const t of e.incidency.keys()){const e=a.toDigits(null!==(l=t.get("index"))&&void 0!==l?l:0,6);i[n[a.fromDigits([e[0],e[1],e[4],e[2],e[3],e[5]])]]=String.fromCharCode(49+(t.get("key")||0))}return i.join("")}throw TypeError(`'${t}' is not a valid format.`)}}t.HGSudokuVanilla=n},466:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.init=t.MDIterator=t.IntegerRange=t.BaseN=void 0,t.BaseN=class{constructor(e){this.base=e}fromDigits(e){return e.reduce(((e,t)=>e*this.base+t),0)}toDigits(e,t){const r=Array.from({length:t});for(let s=t-1;s>0;s--)r[s]=e%this.base,e=Math.trunc(e/this.base);return r[0]=e,r}};class r{constructor(e,t){void 0===t?(this.a=0,this.b=e):(this.a=e,this.b=t)}at(e){return this.a+e}get length(){return this.b-this.a}set length(e){this.b=this.a+e}*keys(){const e=this.b-this.a;for(let t=0;t<e;t++)yield t}*values(){for(let e=this.a;e<this.b;e++)yield e}*[Symbol.iterator](){for(let e=this.a;e<this.b;e++)yield e}*entries(){const e=this.b-this.a;for(let t=0;t<e;t++)yield[t,this.a+t]}map(e){const t=this.b-this.a,r=new Array(t);for(let s=0;s<t;s++)r[s]=e(this.a+s,s);return r}forEach(e){const t=this.b-this.a;new Array(t);for(let r=0;r<t;r++)e(this.a+r,r)}}t.IntegerRange=r,t.MDIterator=function*e(t,r=[]){if(1==t.length)for(let e=0;e<t[0];e++)yield[...r,e];else for(let s=0;s<t[0];s++)yield*e(t.slice(1),[...r,s])},t.init=(e,t)=>{const r=new Array(e);for(const e of r.keys())r[e]=t(e);return r}}},t={};function r(s){var o=t[s];if(void 0!==o)return o.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,r),i.exports}(()=>{var e;const t=r(726),s=r(548),o=t.SolverStrategiesSV,i=new s.HGSudokuVanilla(3),n=e=>{document.writeln('<pre style ="font-family: Consolas; font-size:8pt; letter-spacing: 6pt;">');for(const t of i.export(e,"candibox").replace(/\*/g,".").split("\n"))document.writeln(`${t}`);document.writeln("</pre>")},a=i.import("092001750500200008000030200075004960200060075069700030008090020700003089903800040");console.log("Puzzle has been successfully imported.");const l=(null===(e=o.get("naked_single"))||void 0===e?void 0:e.call(null,{game:i,v_set:new Set([...a.incidency.keys()]),settings:{},view:{}}))||[];l.length>0?n(a.filterVertices((e=>l[0].v_set.has(e)))):n(a)})()})();